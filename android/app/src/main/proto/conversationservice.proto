syntax = "proto3";

import "commonmessages.proto";
option java_multiple_files = true;
option java_package = "com.frontm.conversation.proto";

package conversation;

service ConversationService {
    rpc UpdateFavourites(UpdateFavouritesInput) returns (UpdateFavouritesResponse) {}
    rpc GetTimeline(commonmessages.Empty) returns (TimelineResponse) {}
    rpc GetCatalog(commonmessages.Empty) returns (CatalogResponse) {}
    rpc GetConversationDetails(GetConversationDetailsInput) returns (GetConversationDetailsResponse) {}
    rpc GetArchivedMessages(GetArchivedMessagesInput) returns (GetArchivedMessagesResponse) {}
}

message UpdateFavouritesInput {
    string action = 1;
    string userDomain = 2;
    string conversationId = 3;
    string channelName = 4;
    string userId = 5;
    string botId = 6;
}

message UpdateFavouritesResponse {
    string error = 1;
}

message TimelineResponse {
    string error = 1;
    TimelineContent content = 2;
}

message TimelineContent {
    repeated TimelineConversation conversations = 1;
    repeated TimelineConversation favourites = 2;
}

message TimelineConversation {
    bool closed = 1;
    repeated string participants = 2;
    int32 createdOn = 3;
    int32 modifiedOn = 4;
    string userDomain = 5;
    string conversationId = 6;
    string createdBy = 7;
    repeated TimelineChannels onChannels = 8;
    TimelineBotInfo bot = 9;
    bytes lastMessage = 10;
    TimelineContact contact = 11;
}

message TimelineChannels {
    string channelName = 1;
    string userDomain = 2;
}

message TimelineBotInfo {
    string allowResetConversation = 1;
    string botName = 2;
    string logoUrl = 3;
    string slug = 4;
    string userDomain = 5;
    string botUrl = 6;
    string description = 7;
    string botId = 8;
    bool systemBot = 9;
}

message TimelineContact {
    bool visible = 1;
    bool searchable = 2;
    string userName = 3;
    string userId = 4;
}

message CatalogResponse {
    repeated CatalogBot bots = 1;
}

message CatalogBot {
    string botId = 1;
    string userDomain = 2;
    string allowResetConversation = 3;
    CatalogBotClients botClients = 4;
    string botName = 5;
    string botNameSearch = 6;
    string botUrl = 7;
    repeated string category = 8;
    CatalogDependencies dependencies = 9;
    string description = 10;
    string descriptionSearch = 11;
    string logoUrl = 12;
    string slug = 13;
    repeated string userRoles = 14;
    string version = 15;
    string developer = 16;
    bool featured = 17;
    bool systemBot = 18;
    string minRequiredPlatformVersion = 19;
}

message CatalogBotClients {
    bool mobile = 1;
    bool web = 2;
}

message CatalogDependencies {
    CatalogDependency agentGuardService = 1;
    CatalogDependency authContext = 2;
    CatalogDependency archiveUtils = 3;
    CatalogDependency botUtils = 4;
    CatalogDependency autoRenewConversationContext = 5;
}

message CatalogDependency {
    bool remote = 1;
    string version = 2;
    string url = 3;
}

message GetConversationDetailsInput {
    string conversationId = 1;
    string botId = 2;
    string createdBy = 3;
}

message GetConversationDetailsResponse {
    repeated GetConversationDetailsChannels onChannels = 1;
    GetConversationDetailsUser conversationOwner = 2;
    repeated GetConversationDetailsUser participants = 3;
    int32 error = 4;
}

message GetConversationDetailsUser {
    string userId = 1;
    string userName = 2;
}

message GetConversationDetailsChannels {
    string channelName = 1;
    string userDomain = 2;
    string channelId = 3;
    string description = 4;
    string logo = 5;
}

message GetArchivedMessagesInput {
    string conversationId = 1;
    string botId = 2;
}

message GetArchivedMessagesResponse {
    int32 error = 1;
    repeated GetArchivedMessagesContent content = 2;
}

message GetArchivedMessagesContent {
    string messageId = 1;
    string contentType = 2;
    int32 createdOn = 3;
    string createdBy = 4;
    bytes content = 5;
    bytes options = 6;
}