var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}(function(){var _this=this;var Bot=function Bot(botState){var _=botState._;var d=botState.developer;var LAST_LOGIN='lastLogin';var PREVIOUS_INTENT='previousIntent';var YES='Yes, sure';var NO='No';var TRAVEL='Travel';var MARITIME_PRODUCTIVITY='Maritime Productivity';var MARITIME_OPERATIONS='Maritime Operations';var COMMUNICATIONS_COLLABORATION='Communication & Collaboration';var IOT_SENSOR_MANAGEMENT='IoT Sensor Management';var AVIATION_OPERATIONS='Inflight Operations';var PROCESS_AUTOMATION='Process Automation';var CHATBOT_DEVELOPMENT='FrontM Development';var NOTHING_SPECIFIC='Nothing in specific';var USER_QUALIFICATION_FINISHED='Set Personalisation';var SERVICE_PROVIDER_ACCESS='Access Service Provider Apps';var CANCEL_EDGE_CODE_VALIDATION_PROCESS='Abort';var SELECT_POLLING_STRATEGY='Internet usage settings';var TERRESTRIAL_POLLING_STRATEGY='Terrestrial';var SATELLITE_POLLING_STRATEGY='Satellite';var MANUAL_POLLING_STRATEGY='Manual';var AUTOMATIC_POLLING_STRATEGY='Automatic';var CANCEL_POLLING_STRATEGY='Leave it as it is';var MY_ACCOUNT='My Account';var CANCEL_MY_ACCOUNT='Leave my account as is';var CHANGE_PASSWORD='Change Password';var LOGOUT='Logout';var ACTIVE_PUSH_NOTIFICATIONS='Activate Notifications';var DEACTIVE_PUSH_NOTIFICATIONS='Deactivate Notifications';var PUSH_NOTIFICATIONS_CHECK_INTENT='pushNotificationsCheck';var LOGOUT_INTENT='logoutIntent';var REGISTER_PUSH_ON_BACKEND='registerPushOnBackend';var DEREGISTER_PUSH_ON_EDGE='deregisterPushOnEdge';var DEREGISTER_PUSH_ON_BACKEND='deregisterPushOnBackend';var USER_QUALIFICATION='userQualification';var EDGE_CODE_VALIDATION_PROCESS='edgeCodeValidationProcess';var SAVE_NEW_PASSWORD='saveNewPassword';var USER_QUALIFICATION_FIELD='userQualificationField';var NOTIFICATION_CHANGES_IN_PROGRESS='notificationsChangesInProgress';var COMPLAINT_FORM='COMPLAINT_FORM';var ACTIVATE_DOMAIN_BOTFLOW='activateDomainBotFlow';var ACTIVATE_DOMAIN_ENTITY='activateDomainEntity';var NOTIFICATIONS_BOTFLOW='notificationsBotflow';var USER_QUALIFICATION_BOTFLOW='userQualificationBotFlow';var POLLING_STRATEGY_BOTFLOW='pollingStrategyBotFlow';var MY_ACCOUNT_BOTFLOW='myAccountBotFlow';var CHANGE_PASSWORD_FORM='passwordForm';var setNotificationsBotFlow=function setNotificationsBotFlow(botState){if(botState.client===State.MOBILECLIENT()){var botFlow=new BotFlow(botState,NOTIFICATIONS_BOTFLOW);botFlow.addStep([pushNotificationsCheck]);botFlow.addStep([yes,no]);botState.addBotFlow(botFlow);}};var setServiceProvderBotFlow=function setServiceProvderBotFlow(botState){var botFlow=new BotFlow(botState,ACTIVATE_DOMAIN_BOTFLOW);botFlow.addStep([serviceProviderAccess]);botFlow.addStep([validationCode,cancelValidationProcess]);botFlow.addStep([edgeValidationProcess]);botFlow.onStart=function(botFlow){var activationEntity=new BotFlowEntity(botState,ACTIVATE_DOMAIN_ENTITY);botFlow.addEntity(activationEntity);};botState.addBotFlow(botFlow);};var setUserPersonalisationBotFlow=function setUserPersonalisationBotFlow(botState){var botFlow=new BotFlow(botState,USER_QUALIFICATION_BOTFLOW);botFlow.addStep([userQualification]);if(botState.client===State.MOBILECLIENT()){botFlow.addStep([travel,maritimeProductivity,processAutomation,nothingSpecific]);}else{botFlow.addStep([communicationCollaboration,maritimeOperations,aviationProductivity,iotSensorManagement,chatbotDevelopment,nothingSpecific]);}botState.addBotFlow(botFlow);};var setMyAccountBotFlow=function setMyAccountBotFlow(botState){var botFlow=new BotFlow(botState,MY_ACCOUNT_BOTFLOW);botFlow.addStep([myAccount]);botFlow.addStep([cancelMyAccount]);botState.addBotFlow(botFlow);};var setPollingStrategyBotFlow=function setPollingStrategyBotFlow(botState){if(botState.client===State.MOBILECLIENT()){var botFlow=new BotFlow(botState,POLLING_STRATEGY_BOTFLOW);botFlow.addStep([selectPollingStrategy]);botFlow.addStep([automaticPollingStrategy,terrestrialPollingStrategy,satellitePollingStrategy,manualPollingStrategy,cancelPollingStrategySelection]);botState.addBotFlow(botFlow);}};var setComplaintForm=function setComplaintForm(botState){var formId=botState.getField(COMPLAINT_FORM);if(!formId){formId=botState.getUniqueId();botState.setField(COMPLAINT_FORM,formId);}var complaintForm=new Form(botState,{formId:formId,title:'Issue Form',description:'Click here to enter details',confirm:'Save',cancel:'Cancel'});complaintForm.addField({id:'title',title:'Title',type:FormFieldTypes.TEXT_FIELD(),mandatory:true});complaintForm.addField({id:'description',title:'Description',type:FormFieldTypes.TEXT_AREA(),mandatory:true});complaintForm.onSubmit=function(botState,data){botState.addStringResponse('I am generating a support case. Please bear with me for a second');botState.sendMessage({intentId:'emailSupport',title:data.fields[0].value,description:data.fields[1].value});};botState.addForm(complaintForm);};var setChangePasswordForm=function setChangePasswordForm(botState){var formId=botState.getField(CHANGE_PASSWORD_FORM);if(!formId){formId=botState.getUniqueId();botState.setField(CHANGE_PASSWORD_FORM,formId);}var chgPasswordForm=new Form(botState,{formId:formId,title:'Change Password Form',description:'Open this form to change the password',confirm:'Submit',cancel:'Cancel'});chgPasswordForm.addField({id:'oldPassword',title:'oldPassword',type:FormFieldTypes.PASSWORD_FIELD(),mandatory:true});chgPasswordForm.addField({id:'newPassword1',title:'New Password',type:FormFieldTypes.PASSWORD_FIELD(),mandatory:true});chgPasswordForm.addField({id:'newPassword2',title:'Repeat Password',type:FormFieldTypes.PASSWORD_FIELD(),mandatory:true});chgPasswordForm.onSubmit=function(botState,data){var oldPassword='';var newPassword1='';var newPassword2='';botState._.each(data.fields,function(field){if(field.id==='oldPassword'){oldPassword=field.value;}else if(field.id==='newPassword1'){newPassword1=field.value;}else{newPassword2=field.value;}});if(newPassword1!==newPassword2){botState.addErrorToStack("The new password fields don't match. Please enter edit the form again");}else if(oldPassword===newPassword1){botState.addErrorToStack('Your new password must be different than the new Password');}else if(botState._.size(newPassword1)<8){botState.addErrorToStack('Your new password must be minimal 8 characters long');}if(botState.inError){var _chgPasswordForm=botState.getForm(botState.getField(CHANGE_PASSWORD_FORM));botState.addResponse('form2',_chgPasswordForm);}else{botState.sendMessage({intentId:SAVE_NEW_PASSWORD,oldPassword:oldPassword,newPassword:newPassword1});}};botState.addForm(chgPasswordForm);};var main=new Intent('main');main.nlpId='FMBot';main.onInit=function(botState){setServiceProvderBotFlow(botState);setPollingStrategyBotFlow(botState);setNotificationsBotFlow(botState);setUserPersonalisationBotFlow(botState);setMyAccountBotFlow(botState);setChangePasswordForm(botState);setComplaintForm(botState);};main.onResolution=function _callee(botState){return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:botState.runFunctionOnceAnHour(function(){botState.addStringResponse('Hi! '+botState.userName);var lastLogin=botState.getField(LAST_LOGIN);if(!lastLogin){botState.setField(LAST_LOGIN,new Date().toUTCString());if(botState.client===State.MOBILECLIENT()){if(botState.amIOnline){botState.sendMessage({intentId:PUSH_NOTIFICATIONS_CHECK_INTENT});}}else{botState.sendMessage({intentId:USER_QUALIFICATION});}}});case 1:case'end':return _context.stop();}}},null,_this);};var pushNotificationsCheck=new Intent(PUSH_NOTIFICATIONS_CHECK_INTENT);pushNotificationsCheck.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===PUSH_NOTIFICATIONS_CHECK_INTENT;};pushNotificationsCheck.onResolution=function _callee2(botState){return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt('return',botState.notification.isDeviceRegisteredForPush().then(function(isRegistered){if(!isRegistered){var botFlow=botState.getBotFlow(NOTIFICATIONS_BOTFLOW);botFlow.start();botState.setField(PREVIOUS_INTENT,PUSH_NOTIFICATIONS_CHECK_INTENT);botState.addStringResponse('To start, can you authorise me to notify you when new messages arrive?');botFlow.markIntentResolved(pushNotificationsCheck.intentId);}else{botState.sendMessage({intentId:USER_QUALIFICATION});}}));case 1:case'end':return _context2.stop();}}},null,_this);};var showErrorsToUser=function showErrorsToUser(botState){botState.defaultOnError();botState.clearField(NOTIFICATION_CHANGES_IN_PROGRESS);};var yesPush=new Intent('yesPush');yesPush.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===YES||botState.action==='yes')&&previousIntent===PUSH_NOTIFICATIONS_CHECK_INTENT||botState.messageFromUser===ACTIVE_PUSH_NOTIFICATIONS||botState.action==='ActivatePush';};yesPush.onError=function(botState){showErrorsToUser(botState);};yesPush.onResolution=function _callee3(botState){var botFlow;return regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(botState.getField(NOTIFICATION_CHANGES_IN_PROGRESS)){_context3.next=7;break;}botState.setField(NOTIFICATION_CHANGES_IN_PROGRESS,true);botFlow=botState.getBotFlow(NOTIFICATIONS_BOTFLOW);botFlow.end();return _context3.abrupt('return',botState.notification.registerDeviceForPushOnEdge().then(function(notificationDeviceInfo){if(!botState.inError){botState.sendMessage({intentId:REGISTER_PUSH_ON_BACKEND,notificationDeviceInfo:notificationDeviceInfo});}else{botState.sendMessage({intentId:USER_QUALIFICATION});}}));case 7:botState.addStringResponse('Your notification settings are still being updated. Please try me again in just a moment.');case 8:botState.clearField(PREVIOUS_INTENT);case 9:case'end':return _context3.stop();}}},null,_this);};var yesLogout=new Intent('yesLogout');yesLogout.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===YES||botState.action==='yes')&&previousIntent===LOGOUT_INTENT;};yesLogout.onError=function(botState){showErrorsToUser(botState);};yesLogout.onResolution=function _callee4(botState){return regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:botState.sendMessage({intentId:DEREGISTER_PUSH_ON_EDGE});botState.clearField(PREVIOUS_INTENT);case 2:case'end':return _context4.stop();}}},null,_this);};var yes=new Intent('yes');yes.suggestionsArray=[{lang:'en',list:[YES]}];yes.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return!previousIntent&&botState.action==='yes';};yes.onResolution=function _callee5(botState){return regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:botState.addStringResponse('Say yes to you!');case 1:case'end':return _context5.stop();}}},null,_this);};var yesBackend=new Intent('yesBackend');yesBackend.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return!previousIntent&&botState.action==='yes';};yesBackend.onResolution=function _callee6(botState){return regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:botState.addStringResponse('Say yes to you!');case 1:case'end':return _context6.stop();}}},null,_this);};var registerPushOnBackend=new Intent(REGISTER_PUSH_ON_BACKEND);registerPushOnBackend.runOnCloud();registerPushOnBackend.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===REGISTER_PUSH_ON_BACKEND;};registerPushOnBackend.onError=function(botState){showErrorsToUser(botState);};registerPushOnBackend.onResolution=function _callee7(botState){return regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:return _context7.abrupt('return',botState.notification.registerDeviceForPushOnBackend(botState.messageFromUser.notificationDeviceInfo).then(function(){botState.addStringResponse('Notifications are now active. If you need to switch it off in the future, just chat with me here');var botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);if(botFlow.isStarted){botFlow.end();}else{botState.sendMessage({intentId:USER_QUALIFICATION});}botState.clearField(NOTIFICATION_CHANGES_IN_PROGRESS);}));case 1:case'end':return _context7.stop();}}},null,_this);};var deActivatePushNotifications=new Intent('deActivatePushNotifications');deActivatePushNotifications.onMatching=function(botState){return(botState.messageTypeFromUser==='string'&&botState.messageFromUser===DEACTIVE_PUSH_NOTIFICATIONS||botState.action==='DeactivateNotifications'||botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===DEREGISTER_PUSH_ON_EDGE)&&botState.client===State.MOBILECLIENT();};deActivatePushNotifications.onError=function(botState){showErrorsToUser(botState);};deActivatePushNotifications.onResolution=function _callee8(botState){var callNextIntent;return regeneratorRuntime.async(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:callNextIntent=function callNextIntent(notificationDeviceInfo){var forLogOut=false;if(botState.messageTypeFromUser==='object'){forLogOut=true;}if(notificationDeviceInfo){botState.sendMessage({intentId:DEREGISTER_PUSH_ON_BACKEND,notificationDeviceInfo:notificationDeviceInfo,forLogOut:forLogOut});}else{if(forLogOut){botState.sendMessage({intentId:LOGOUT});}}};if(botState.getField(NOTIFICATION_CHANGES_IN_PROGRESS)){_context8.next=6;break;}botState.setField(NOTIFICATION_CHANGES_IN_PROGRESS,true);return _context8.abrupt('return',botState.notification.isDeviceRegisteredForPush().then(function(isRegistered){if(isRegistered){return botState.notification.deregisterDeviceForPushOnEdge().then(function(notificationDeviceInfo){callNextIntent(notificationDeviceInfo);});}else{callNextIntent();}}));case 6:botState.addStringResponse('Your notification settings are still being updated. Please try me again in just a moment.');case 7:case'end':return _context8.stop();}}},null,_this);};var deregisterPushOnBackend=new Intent(DEREGISTER_PUSH_ON_BACKEND);deregisterPushOnBackend.runOnCloud();deregisterPushOnBackend.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===DEREGISTER_PUSH_ON_BACKEND;};deregisterPushOnBackend.onError=function(botState){showErrorsToUser(botState);};deregisterPushOnBackend.onResolution=function _callee9(botState){return regeneratorRuntime.async(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt('return',botState.notification.deregisterDeviceForPushOnBackend(botState.messageFromUser.notificationDeviceInfo).then(function(){if(botState.messageFromUser.forLogOut){botState.sendMessage({intentId:LOGOUT});}else{botState.addStringResponse('Notifications are now deactivated');var botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);botFlow.end();}botState.clearField(NOTIFICATION_CHANGES_IN_PROGRESS);}));case 1:case'end':return _context9.stop();}}},null,_this);};var noPush=new Intent('noPush');noPush.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===NO||botState.action==='no')&&previousIntent===PUSH_NOTIFICATIONS_CHECK_INTENT;};noPush.onResolution=function _callee10(botState){var botFlow;return regeneratorRuntime.async(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:botFlow=botState.getBotFlow(NOTIFICATIONS_BOTFLOW);botFlow.end();botState.addStringResponse('No problem, any incoming messages and alerts will not be notified. You can always ask me to switch on notifications here ');botState.sendMessage({intentId:USER_QUALIFICATION});botState.clearField(PREVIOUS_INTENT);case 5:case'end':return _context10.stop();}}},null,_this);};var noLogout=new Intent('noLogout');noLogout.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===NO||botState.action==='no')&&previousIntent===LOGOUT_INTENT;};noLogout.onResolution=function _callee11(botState){var botFlow;return regeneratorRuntime.async(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:botState.addStringResponse('Ok');botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);botFlow.end();botState.clearField(PREVIOUS_INTENT);case 4:case'end':return _context11.stop();}}},null,_this);};var no=new Intent('no');no.suggestionsArray=[{lang:'en',list:[NO]}];no.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===NO||botState.action==='no')&&!previousIntent;};no.onResolution=function _callee12(botState){return regeneratorRuntime.async(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:botState.addStringResponse("Please don't be so negative");case 1:case'end':return _context12.stop();}}},null,_this);};var noBackend=new Intent('noBackend');noBackend.onMatching=function(botState){var previousIntent=botState.getField(PREVIOUS_INTENT);return(botState.messageFromUser===NO||botState.action==='no')&&!previousIntent;};noBackend.onResolution=function _callee13(botState){return regeneratorRuntime.async(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:botState.addStringResponse("Please don't be so negative");case 1:case'end':return _context13.stop();}}},null,_this);};var sendWelcomeMessages=function sendWelcomeMessages(botState){botState.addStringResponse('Great. Touch the back button on the top to go to home screen, connect with your contacts and enjoy exploring the Marketplace.');botState.addStringResponse('Remember, I am here to help you with any general enquiries and app settings.');};var userQualification=new Intent(USER_QUALIFICATION);userQualification.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===USER_QUALIFICATION;};userQualification.onResolution=function _callee14(botState){var userQualificationField,cards,botFlow;return regeneratorRuntime.async(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:userQualificationField=botState.getField(USER_QUALIFICATION_FIELD);if(!userQualificationField){botState.addStringResponse('We provide a range of Chatbots to address your context-specific needs. Explore the below options and select one that best applies to you.');if(botState.client===State.MOBILECLIENT()){cards=[{pictureUrl:'https://s3.amazonaws.com/frontm-contentdelivery-mobilehub-1030065648/botLogos/cardIcons/Travel.jpeg',description:'For those with a travel bug, a suite of Chatbots that accompany you on your flight or cruise. \n'+'Chatbots that ensure you are in control during your travel. \n'+'1. Flight tracker: From the comfort of your aeroplane seats, track your flight, discover destination, explore hotels and more\n'+'2. Journey planner: For the air traveller to easily access transit info, baggage tracking, flight status, booking changes and more\n'+'3. Coming soon',action:TRAVEL},{pictureUrl:'https://s3.amazonaws.com/frontm-contentdelivery-mobilehub-1030065648/botLogos/cardIcons/Ship.jpeg',description:'For mariners and crew, applications that enhance collaboration, operations and productivity\n'+'Applications that help you save time, money and be more efficient in marine operations\n'+'1. Boat tracker: For the shore coordinator and ship master, track you boats, get safety alerts and situational information\n'+'2. Voice digital wallet: Top up your wallet to make calls to ship bridge numbers (+870 & +882) for less than half the telecom tariffs\n'+'3. Service provider specific applications: You need a licence code to unlock them, follow through the conversation next. \n'+'4. New applications coming soon',action:MARITIME_PRODUCTIVITY},{pictureUrl:'https://s3.amazonaws.com/frontm-contentdelivery-mobilehub-1030065648/botLogos/cardIcons/Process.jpeg',description:'For teams dealing with satellite terminals, Industrial IoT and other operations in remote industries\n'+'Applications that help you save time, money and be more efficient in remote operations \n'+'1. Sensor manager: Activate and manage your sensors on your LoRaWAN network\n'+'2. Voice digital wallet: Top up your wallet to make calls to satellite phone numbers (+870 & +882) for less than half the telecom tariffs\n'+'3. Service provider specific applications: You need a licence code to unlock them, follow through the conversation next. \n'+'4. Many new applications coming soon',action:PROCESS_AUTOMATION},{pictureUrl:'https://s3.amazonaws.com/frontm-contentdelivery-mobilehub-1030065648/botLogos/cardIcons/Check.jpeg',description:"For generic users to mainly take advantage of FrontM's default chat, channels and voice calling features \n"+'We are constantly adding new Chatbots for your generic use\n'+'1. Survey: Tell us about the app, \n'+'2. Voice digital wallet: Top up your wallet and call any number anywhere in the world for a fraction of the cost.\n'+'3. New applications coming soon',action:NOTHING_SPECIFIC}];botState.addResponse('cards',cards);botState.blockSuggestions=true;}botFlow=botState.getBotFlow(USER_QUALIFICATION_BOTFLOW);botFlow.start();botFlow.markIntentResolved(USER_QUALIFICATION);}else{botState.addResponse('silent',{});}case 2:case'end':return _context14.stop();}}},null,_this);};var userQualificationFinished=new Intent('userQualificationFinished');userQualificationFinished.suggestionsArray=[{lang:'en',list:[USER_QUALIFICATION_FINISHED]}];userQualificationFinished.onMatching=function(botState){return botState.messageFromUser===USER_QUALIFICATION_FINISHED;};userQualificationFinished.onResolution=function _callee15(botState){var botFlow;return regeneratorRuntime.async(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:sendWelcomeMessages(botState);botFlow=botState.getBotFlow(USER_QUALIFICATION_BOTFLOW);botFlow.end();case 3:case'end':return _context15.stop();}}},null,_this);};var setNewPersonalisationTo=function setNewPersonalisationTo(botState,personalisation,text){var botFlow=botState.getBotFlow(USER_QUALIFICATION_BOTFLOW);var userQualificationField=botState.getField(USER_QUALIFICATION_FIELD);if(userQualificationField){userQualificationField.push(personalisation);botState.setField(USER_QUALIFICATION_FIELD,userQualificationField);}else{botState.setField(USER_QUALIFICATION_FIELD,[personalisation]);}botFlow.end();sendWelcomeMessages(botState);};var travel=new Intent('travel');travel.suggestionsArray=[{lang:'en',list:[TRAVEL]}];travel.onMatching=function(botState){return botState.messageFromUser===TRAVEL||botState.action==='travel';};travel.onResolution=function _callee16(botState){return regeneratorRuntime.async(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:setNewPersonalisationTo(botState,'travel','Travel');case 1:case'end':return _context16.stop();}}},null,_this);};var maritimeProductivity=new Intent('maritimeProductivity');maritimeProductivity.suggestionsArray=[{lang:'en',list:[MARITIME_PRODUCTIVITY]}];maritimeProductivity.onMatching=function(botState){return botState.messageFromUser===MARITIME_PRODUCTIVITY||botState.action==='MaritimeProductivity';};maritimeProductivity.onResolution=function _callee17(botState){return regeneratorRuntime.async(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:setNewPersonalisationTo(botState,'maritimeProductivity','Maritime Productivity');case 1:case'end':return _context17.stop();}}},null,_this);};var aviationProductivity=new Intent('aviationProductivity');aviationProductivity.suggestionsArray=[{lang:'en',list:[AVIATION_OPERATIONS]}];aviationProductivity.onMatching=function(botState){return botState.messageFromUser===AVIATION_OPERATIONS||botState.action==='AviationOperations';};aviationProductivity.onResolution=function _callee18(botState){return regeneratorRuntime.async(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:setNewPersonalisationTo(botState,'aviationProductivity','Aviation Productivity');case 1:case'end':return _context18.stop();}}},null,_this);};var maritimeOperations=new Intent('maritimeOperations');maritimeOperations.suggestionsArray=[{lang:'en',list:[MARITIME_OPERATIONS]}];maritimeOperations.onMatching=function(botState){return(botState.messageFromUser===MARITIME_OPERATIONS||botState.action==='MaritimeProductivity')&&botState.client===State.WEBCLIENT();};maritimeOperations.onResolution=function _callee19(botState){return regeneratorRuntime.async(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:setNewPersonalisationTo(botState,'maritimeOperations',MARITIME_OPERATIONS);case 1:case'end':return _context19.stop();}}},null,_this);};var communicationCollaboration=new Intent('communicationCollaboration');communicationCollaboration.suggestionsArray=[{lang:'en',list:[COMMUNICATIONS_COLLABORATION]}];communicationCollaboration.onMatching=function(botState){return botState.messageFromUser===COMMUNICATIONS_COLLABORATION||botState.action==='CommunicationCollaboration';};communicationCollaboration.onResolution=function _callee20(botState){return regeneratorRuntime.async(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:setNewPersonalisationTo(botState,'communicationCollaboration',COMMUNICATIONS_COLLABORATION);case 1:case'end':return _context20.stop();}}},null,_this);};var iotSensorManagement=new Intent('iotSensorManagement');iotSensorManagement.suggestionsArray=[{lang:'en',list:[IOT_SENSOR_MANAGEMENT]}];iotSensorManagement.onMatching=function(botState){return botState.messageFromUser===IOT_SENSOR_MANAGEMENT||botState.action==='IOT';};iotSensorManagement.onResolution=function _callee21(botState){return regeneratorRuntime.async(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:setNewPersonalisationTo(botState,'iotSensorManagement',IOT_SENSOR_MANAGEMENT);case 1:case'end':return _context21.stop();}}},null,_this);};var chatbotDevelopment=new Intent('chatbotDevelopment');chatbotDevelopment.suggestionsArray=[{lang:'en',list:[CHATBOT_DEVELOPMENT]}];chatbotDevelopment.onMatching=function(botState){return botState.messageFromUser===CHATBOT_DEVELOPMENT||botState.action==='development';};chatbotDevelopment.onResolution=function _callee22(botState){return regeneratorRuntime.async(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:setNewPersonalisationTo(botState,'chatbotDevelopment',CHATBOT_DEVELOPMENT);case 1:case'end':return _context22.stop();}}},null,_this);};var processAutomation=new Intent('processAutomation');processAutomation.suggestionsArray=[{lang:'en',list:[PROCESS_AUTOMATION]}];processAutomation.onMatching=function(botState){return botState.messageFromUser===PROCESS_AUTOMATION||botState.action==='ProcessAutomation';};processAutomation.onResolution=function _callee23(botState){return regeneratorRuntime.async(function _callee23$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:setNewPersonalisationTo(botState,'processAutomation','Process Automation');case 1:case'end':return _context23.stop();}}},null,_this);};var nothingSpecific=new Intent('nothingSpecific');nothingSpecific.suggestionsArray=[{lang:'en',list:[NOTHING_SPECIFIC]}];nothingSpecific.onMatching=function(botState){return botState.messageFromUser===NOTHING_SPECIFIC||botState.action==='NothingSpecific';};nothingSpecific.onResolution=function _callee24(botState){var botFlow;return regeneratorRuntime.async(function _callee24$(_context24){while(1){switch(_context24.prev=_context24.next){case 0:botFlow=botState.getBotFlow(USER_QUALIFICATION_BOTFLOW);botFlow.end();botFlow.markIntentResolved('nothingSpecific');sendWelcomeMessages(botState);case 4:case'end':return _context24.stop();}}},null,_this);};var serviceProviderAccess=new Intent('serviceProviderAccess');serviceProviderAccess.suggestionsArray=[{lang:'en',list:[SERVICE_PROVIDER_ACCESS]}];serviceProviderAccess.onMatching=function(botState){return botState.messageFromUser===SERVICE_PROVIDER_ACCESS||botState.action==='InvitationCode';};serviceProviderAccess.onResolution=function _callee25(botState){var botFlow;return regeneratorRuntime.async(function _callee25$(_context25){while(1){switch(_context25.prev=_context25.next){case 0:botState.addStringResponse('Please type in or scan the invitation code provided');botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);botFlow.start();botFlow.markIntentResolved('serviceProviderAccess');case 4:case'end':return _context25.stop();}}},null,_this);};var validationCode=new Intent('validationCode');validationCode.runOnCloud();validationCode.onMatching=function(botState){var botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);var activationEntity=botFlow.getEntity(ACTIVATE_DOMAIN_ENTITY);return botFlow.isStarted&&!_.get(activationEntity,'domains')||botState.messageTypeFromUser==='barcode';};validationCode.onResolution=function _callee26(botState){return regeneratorRuntime.async(function _callee26$(_context26){while(1){switch(_context26.prev=_context26.next){case 0:return _context26.abrupt('return',botState.marketplace.validateActivationCode(botState.messageFromUser).then(function(domains){if(domains&&!botState._.isEmpty(domains)){var botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);var activationEntity=botFlow.getEntity(ACTIVATE_DOMAIN_ENTITY);activationEntity.domains=domains;botState.sendMessage({intentId:EDGE_CODE_VALIDATION_PROCESS});}else{botState.addErrorToStack(1001,'I could not validate this code. Please try again');}}));case 1:case'end':return _context26.stop();}}},null,_this);};var cancelValidationProcess=new Intent('cancelValidationCode');cancelValidationProcess.suggestionsArray=[{lang:'en',list:[CANCEL_EDGE_CODE_VALIDATION_PROCESS]}];cancelValidationProcess.onMatching=function(botState){return botState.messageFromUser===CANCEL_EDGE_CODE_VALIDATION_PROCESS;};cancelValidationProcess.onResolution=function _callee27(botState){var botFlow;return regeneratorRuntime.async(function _callee27$(_context27){while(1){switch(_context27.prev=_context27.next){case 0:botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);botFlow.end();botState.addStringResponse('Ok');case 3:case'end':return _context27.stop();}}},null,_this);};var edgeValidationProcess=new Intent(EDGE_CODE_VALIDATION_PROCESS);edgeValidationProcess.onMatching=function(botState){var botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);var activationEntity=botFlow.getEntity(ACTIVATE_DOMAIN_ENTITY);return botFlow.isStarted&&_.get(activationEntity,'domains');};edgeValidationProcess.onResolution=function _callee28(botState){var botFlow,activationEntity;return regeneratorRuntime.async(function _callee28$(_context28){while(1){switch(_context28.prev=_context28.next){case 0:botFlow=botState.getBotFlow(ACTIVATE_DOMAIN_BOTFLOW);activationEntity=botFlow.getEntity(ACTIVATE_DOMAIN_ENTITY);return _context28.abrupt('return',botState.marketplace.activateDomainsOnEdge(activationEntity.domains).then(function(){return botState.marketplace.autoInstallAllBotsOnEdge().then(function(){botState.addStringResponse("Great, the service provider's featured Apps are now installed on your home screen. Touch back to see.");botState.addStringResponse('Remember, I am here to help you with any general enquiries and app settings.');botFlow.end();});}).catch(function(){botFlow.end();}));case 3:case'end':return _context28.stop();}}},null,_this);};var selectPollingStrategy=new Intent('selectPollingStrategy');selectPollingStrategy.suggestionsArray=[{lang:'en',list:[SELECT_POLLING_STRATEGY]}];selectPollingStrategy.onMatching=function(botState){return botState.messageFromUser===SELECT_POLLING_STRATEGY||botState.action==='Polling Strategy';};selectPollingStrategy.onResolution=function _callee29(botState){var botFlow;return regeneratorRuntime.async(function _callee29$(_context29){while(1){switch(_context29.prev=_context29.next){case 0:botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.start();botFlow.markCurrentStepAsCompleted();botState.addStringResponse("Uniquely, FrontM helps you control how you use your available internet. This is particularly useful when you're on in-flight WiFi or on a Ship.");botState.addStringResponse('Select a setting from below suggestions');case 5:case'end':return _context29.stop();}}},null,_this);};var automaticPollingStrategy=new Intent('automaticPollingStrategy');automaticPollingStrategy.suggestionsArray=[{lang:'en',list:[AUTOMATIC_POLLING_STRATEGY]}];automaticPollingStrategy.onMatching=function(botState){return(botState.messageFromUser===AUTOMATIC_POLLING_STRATEGY||botState.action==='AutomaticNetworkMode')&&botState.client===State.MOBILECLIENT();};automaticPollingStrategy.onResolution=function _callee30(botState){return regeneratorRuntime.async(function _callee30$(_context30){while(1){switch(_context30.prev=_context30.next){case 0:return _context30.abrupt('return',botState.setNetworkModeTo('automatic').then(function(){botState.addStringResponse('I will be detecting automatically the type of network you are using');var botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.end();}));case 1:case'end':return _context30.stop();}}},null,_this);};var terrestrialPollingStrategy=new Intent('terrestrialPollingStrategy');terrestrialPollingStrategy.suggestionsArray=[{lang:'en',list:[TERRESTRIAL_POLLING_STRATEGY]}];terrestrialPollingStrategy.onMatching=function(botState){return(botState.messageFromUser===TERRESTRIAL_POLLING_STRATEGY||botState.action==='TerrestrialMode')&&botState.client===State.MOBILECLIENT();};terrestrialPollingStrategy.onResolution=function _callee31(botState){return regeneratorRuntime.async(function _callee31$(_context31){while(1){switch(_context31.prev=_context31.next){case 0:return _context31.abrupt('return',botState.setNetworkModeTo('gsm').then(function(){botState.addStringResponse('I will be assuming you are in a terrestrial network all the time. If you are connected over a satellite the screen will turn pink to let you know');var botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.end();}));case 1:case'end':return _context31.stop();}}},null,_this);};var satellitePollingStrategy=new Intent('satellitePollingStrategy');satellitePollingStrategy.suggestionsArray=[{lang:'en',list:[SATELLITE_POLLING_STRATEGY]}];satellitePollingStrategy.onMatching=function(botState){return(botState.messageFromUser===SATELLITE_POLLING_STRATEGY||botState.action==='SatelliteMode')&&botState.client===State.MOBILECLIENT();};satellitePollingStrategy.onResolution=function _callee32(botState){return regeneratorRuntime.async(function _callee32$(_context32){while(1){switch(_context32.prev=_context32.next){case 0:return _context32.abrupt('return',botState.setNetworkModeTo('satellite').then(function(){botState.addStringResponse('I will be assuming you are connected over a satellite all the time saving data as much as possible');var botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.end();}));case 1:case'end':return _context32.stop();}}},null,_this);};var manualPollingStrategy=new Intent('manualPollingStrategy');manualPollingStrategy.suggestionsArray=[{lang:'en',list:[MANUAL_POLLING_STRATEGY]}];manualPollingStrategy.onMatching=function(botState){return(botState.messageFromUser===MANUAL_POLLING_STRATEGY||botState.action==='ManualNetworkMode')&&botState.client===State.MOBILECLIENT();};manualPollingStrategy.onResolution=function _callee33(botState){return regeneratorRuntime.async(function _callee33$(_context33){while(1){switch(_context33.prev=_context33.next){case 0:return _context33.abrupt('return',botState.setNetworkModeTo('satellite').then(function(){botState.addStringResponse('You are in Manual Network Mode. You are consuming 0KB background data currently. You will need to touch the refresh button to fetch messages.');var botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.end();}));case 1:case'end':return _context33.stop();}}},null,_this);};var cancelPollingStrategySelection=new Intent('cancelPollingStrategySelection');cancelPollingStrategySelection.suggestionsArray=[{lang:'en',list:[CANCEL_POLLING_STRATEGY]}];cancelPollingStrategySelection.onMatching=function(botState){return botState.messageFromUser===CANCEL_POLLING_STRATEGY;};cancelPollingStrategySelection.onResolution=function _callee34(botState){var botFlow;return regeneratorRuntime.async(function _callee34$(_context34){while(1){switch(_context34.prev=_context34.next){case 0:botFlow=botState.getBotFlow(POLLING_STRATEGY_BOTFLOW);botFlow.end();botState.addStringResponse('Ok');case 3:case'end':return _context34.stop();}}},null,_this);};var myAccount=new Intent('myAccount');myAccount.suggestionsArray=[{lang:'en',list:[MY_ACCOUNT]}];myAccount.onMatching=function(botState){return botState.messageFromUser===MY_ACCOUNT||botState.action==='MyAccount';};myAccount.onResolution=function _callee35(botState){return regeneratorRuntime.async(function _callee35$(_context35){while(1){switch(_context35.prev=_context35.next){case 0:if(!(botState.client===State.MOBILECLIENT())){_context35.next=4;break;}return _context35.abrupt('return',botState.notification.isDeviceRegisteredForPush().then(function(isRegistered){botState.addStringResponse('Select from the suggestions below');if(isRegistered){botState.addEnglishSmartSuggestions([DEACTIVE_PUSH_NOTIFICATIONS,CHANGE_PASSWORD,LOGOUT,CANCEL_MY_ACCOUNT]);}else{botState.addEnglishSmartSuggestions([ACTIVE_PUSH_NOTIFICATIONS,CHANGE_PASSWORD,LOGOUT,CANCEL_MY_ACCOUNT]);}var botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);botFlow.start();botFlow.markCurrentStepAsCompleted();}));case 4:botState.addEnglishSmartSuggestions([CHANGE_PASSWORD,CANCEL_MY_ACCOUNT]);case 5:case'end':return _context35.stop();}}},null,_this);};var cancelMyAccount=new Intent('cancelMyAccount');cancelMyAccount.suggestionsArray=[{lang:'en',list:[CANCEL_MY_ACCOUNT]}];cancelMyAccount.onMatching=function(botState){return botState.messageFromUser===CANCEL_MY_ACCOUNT;};cancelMyAccount.onResolution=function _callee36(botState){var botFlow,formId,form;return regeneratorRuntime.async(function _callee36$(_context36){while(1){switch(_context36.prev=_context36.next){case 0:botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);botFlow.end();formId=botState.getField(CHANGE_PASSWORD_FORM);form=botState.getForm(formId);form.closeForm();botState.addStringResponse('Ok');case 6:case'end':return _context36.stop();}}},null,_this);};var changePassword=new Intent('changePassword');changePassword.onMatching=function(botState){return botState.messageFromUser===CHANGE_PASSWORD||botState.action==='ChangePassword';};changePassword.onResolution=function _callee37(botState){var formId,form;return regeneratorRuntime.async(function _callee37$(_context37){while(1){switch(_context37.prev=_context37.next){case 0:formId=botState.getField(CHANGE_PASSWORD_FORM);form=botState.getForm(formId);form.clearAllFields();botState.addResponse('form2',form);case 4:case'end':return _context37.stop();}}},null,_this);};var saveNewPassword=new Intent(SAVE_NEW_PASSWORD);saveNewPassword.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===SAVE_NEW_PASSWORD;};saveNewPassword.onResolution=function _callee38(botState){var botFlow;return regeneratorRuntime.async(function _callee38$(_context38){while(1){switch(_context38.prev=_context38.next){case 0:botFlow=botState.getBotFlow(MY_ACCOUNT_BOTFLOW);botFlow.end();return _context38.abrupt('return',botState.updatePassword(botState.messageFromUser.oldPassword,botState.messageFromUser.newPassword).then(function(){if(!botState.inError){botState.addStringResponse('Your password have been updated');}}));case 3:case'end':return _context38.stop();}}},null,_this);};var logout=new Intent(LOGOUT);logout.onMatching=function(botState){return botState.messageTypeFromUser==='string'&&botState.messageFromUser===LOGOUT||botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId===LOGOUT||botState.action==='logout';};logout.onResolution=function _callee39(botState){return regeneratorRuntime.async(function _callee39$(_context39){while(1){switch(_context39.prev=_context39.next){case 0:if(!(botState.messageTypeFromUser==='string'||botState.action==='logout')){_context39.next=4;break;}if(!botState.getField(NOTIFICATION_CHANGES_IN_PROGRESS)){botState.setField(PREVIOUS_INTENT,LOGOUT_INTENT);botState.addStringResponse('Are you sure you would like to logout?');botState.addEnglishSmartSuggestions([YES,NO]);}else{botState.addStringResponse('Your notification settings are still being updated. Please try me again in just a moment.');}_context39.next=5;break;case 4:return _context39.abrupt('return',botState.logout());case 5:case'end':return _context39.stop();}}},null,_this);};var support=new Intent('support');support.onMatching=function(){return botState.action==='support';};support.onResolution=function _callee40(botState){var formId,form;return regeneratorRuntime.async(function _callee40$(_context40){while(1){switch(_context40.prev=_context40.next){case 0:botState.addStringResponse('Sorry for the trouble, Please fill the form and I will pass the information to our support team immediately');formId=botState.getField(COMPLAINT_FORM);form=botState.getForm(formId);botState.addResponse('form2',form);case 4:case'end':return _context40.stop();}}},null,_this);};var emailSupport=new Intent('emailSupport');emailSupport.runOnCloud();emailSupport.onMatching=function(botState){return botState.messageTypeFromUser==='object'&&botState.messageFromUser.intentId==='emailSupport';};emailSupport.onResolution=function _callee41(botState){var supportId,body,clientBody;return regeneratorRuntime.async(function _callee41$(_context41){while(1){switch(_context41.prev=_context41.next){case 0:supportId=botState.getUniqueId();body='Support request; support id: '+supportId+'\n                Title: '+botState.messageFromUser.title+'\n                Description: '+botState.messageFromUser.description+'\n                User Email: '+botState.user.userEmail;clientBody='Thank you for contacting FrontM Platform.\nWe have opened case \u201C'+supportId+'\u201D to address your issue.\nThe details of your case are as follows:\n\nCase ID: '+supportId+'\nSubject: '+botState.messageFromUser.title+'\n\nTo contact us again about this issue, please email us to support@frontm.com with the case ID in your subject.\n\nSincerely,\nThe FrontM Platform Team\n\n*Please note: this e-mail was sent from an address that cannot accept incoming e-mail. Please use support@frontm.com if you need to contact us again about this same issue.\n\nSome of the content and links in this email may have been generated by a FrontM customer. FrontM is not responsible for the contents or links within.';return _context41.abrupt('return',botState.notification.sendEmail('support@frontm.com','Support request from '+botState.user.userEmail,body).then(function(response){return botState.notification.sendEmail(botState.user.userEmail,'Confirmation',clientBody);}).then(function(response){botState.addStringResponse('I have informed our team about your concern, they will contact you soon.');botState.addStringResponse('Your case number is '+supportId);}).catch(function(err){botState.developer.debug('Error while sending mail to support message: '+err);}));case 4:case'end':return _context41.stop();}}},null,_this);};if(botState.client===State.MOBILECLIENT()){return[main,pushNotificationsCheck,yes,yesPush,yesLogout,registerPushOnBackend,no,noLogout,noPush,userQualification,travel,maritimeProductivity,processAutomation,nothingSpecific,serviceProviderAccess,validationCode,cancelValidationProcess,edgeValidationProcess,selectPollingStrategy,automaticPollingStrategy,terrestrialPollingStrategy,satellitePollingStrategy,manualPollingStrategy,cancelPollingStrategySelection,deActivatePushNotifications,deregisterPushOnBackend,myAccount,cancelMyAccount,changePassword,logout,saveNewPassword,support,emailSupport];}else{return[main,yesBackend,noBackend,userQualification,maritimeOperations,communicationCollaboration,iotSensorManagement,nothingSpecific,serviceProviderAccess,validationCode,cancelValidationProcess,edgeValidationProcess,myAccount,cancelMyAccount,changePassword,saveNewPassword,aviationProductivity,chatbotDevelopment,support,emailSupport];}};var Intent=function(){_createClass(Intent,null,[{key:'EDGE',value:function EDGE(){return'Edge';}},{key:'CLOUD',value:function CLOUD(){return'Cloud';}},{key:'NO_INTENT',value:function NO_INTENT(){return'0_NOINTENT';}}]);function Intent(intentId){_classCallCheck(this,Intent);this['_intentId']=intentId;this['_runLocation']=Intent.EDGE();this['_nlpId']='';this['_smartSuggestions']=[];this['_botFlow']='';this['_botFlowStartIntent']=false;this['_dependencies']=[];}_createClass(Intent,[{key:'runOnCloud',value:function runOnCloud(){this._runLocation=Intent.CLOUD();}},{key:'runOnEdge',value:function runOnEdge(){this._runLocation=Intent.EDGE();}},{key:'runLocation',get:function get(){return this._runLocation;}},{key:'onValidation',get:function get(){return this._onValidation;},set:function set(onValidationBlock){this._onValidation=onValidationBlock;}},{key:'onError',get:function get(){return this._onError;},set:function set(onErrorBlock){this._onError=onErrorBlock;}},{key:'intentId',get:function get(){return this._intentId;}},{key:'nlpId',set:function set(nlpId){this._nlpId=nlpId;},get:function get(){return this._nlpId;}},{key:'suggestionsArray',get:function get(){return this._smartSuggestions;},set:function set(suggestions){this._smartSuggestions=suggestions;}},{key:'onMatching',get:function get(){return this._onMatching;},set:function set(matcher){this._onMatching=matcher;}},{key:'onResolution',get:function get(){return this['_onResolution'];},set:function set(resolver){this['_onResolution']=resolver;}}]);return Intent;}();var LogEntrytype=function(){function LogEntrytype(){_classCallCheck(this,LogEntrytype);}_createClass(LogEntrytype,null,[{key:'SYSTEM_ERROR',value:function SYSTEM_ERROR(){return'System Error';}},{key:'USER_ERROR',value:function USER_ERROR(){return'User Error';}},{key:'WARNING',value:function WARNING(){return'Warning';}},{key:'INFO',value:function INFO(){return'Info';}},{key:'DEBUG',value:function DEBUG(){return'Debug';}}]);return LogEntrytype;}();var SearchBox=function(){function SearchBox(botState,name,selectionType){_classCallCheck(this,SearchBox);this['_botState']=botState;this['_']=botState._;this['name']=name;this['selectionType']=selectionType;this['_onSearch']=function(){};}_createClass(SearchBox,[{key:'getStartMessage',value:function getStartMessage(){return{action:'open',placeholder:this.name};}},{key:'onSearch',set:function set(onSearchBlock){this._onSearch=onSearchBlock;},get:function get(){return this._onSearch();}}]);return SearchBox;}();var Marketplace=function(){function Marketplace(botState){_classCallCheck(this,Marketplace);this['_botState']=botState;this['_']=botState._;}_createClass(Marketplace,[{key:'validateActivationCode',value:function validateActivationCode(code){var _this2=this;var params={capability:'SubscribeDomainRole',capabilityFileName:'subscribeDomainRole',verificationCode:code,sync:true,userId:this._botState.user.userId,conversation:this._botState.conversation};return callLambda('CapabilityExecutorLambda',params,this._botState.context.aws).then(function(response){var payload=JSON.parse(response.Payload);return _this2._botState._.compact(payload);});}},{key:'activateDomainsOnEdge',value:function activateDomainsOnEdge(domains){return this._botState.context.getCapability('authContext').setDomains(domains,this._botState.context);}},{key:'autoInstallAllBotsOnEdge',value:function autoInstallAllBotsOnEdge(){return this._botState.context.getCapability('RemoteBotInstall').syncronizeBots();}}]);return Marketplace;}();var Developer=function(){function Developer(botState){_classCallCheck(this,Developer);this['_botState']=botState;this['_']=botState._;this['_debugMode']=false;this['_command']=[];}_createClass(Developer,[{key:'callBotPublisher',value:function callBotPublisher(newBot,action){var _this3=this;var params={action:action,conversation:this._botState.conversation,botMetadata:newBot,userId:this._botState.user.userId};return callLambda('BotPublisher',params,this._botState.context.aws).then(function(response){var payload=JSON.parse(response.Payload);if(payload.error!==0){if(payload.error===9){_this3._botState.addSystemErrorToStack(9);}else{_this3._botState.addSystemErrorToStack(7,payload.error);}}return payload.error;});}},{key:'publishBot',value:function publishBot(newBot){return this.callBotPublisher(newBot,'publishNewBot');}},{key:'updateBot',value:function updateBot(newBot){return this.callBotPublisher(newBot,'updateBot');}},{key:'deleteBotFromCatalogue',value:function deleteBotFromCatalogue(newBot){return this.callBotPublisher(newBot,'deleteBot');}},{key:'setDebugActive',value:function setDebugActive(){this.debug('Activating debug mode');this._debugMode=true;}},{key:'validDeveloperDomains',value:function validDeveloperDomains(){var _this4=this;var domains=[];this._botState._.each(this._botState.userDomains,function(userDomain){var index=_this4._botState._.findIndex(userDomain.roles,function(role){return role='developer';});if(index>-1){domains.push(userDomain.domain);}});return domains;}},{key:'isDeveloperIntent',value:function isDeveloperIntent(){if(this._botState.messageTypeFromUser==='string'&&this._botState.messageFromUser.substring(0,2)==='@@'){return true;}return false;}},{key:'identifyDeveloperIntent',value:function identifyDeveloperIntent(){switch(this._botState.messageFromUser){case'@@reset conversation':return'_dev_reset_conversation';case'@@show log':return'_dev_show_log';case'@@clear log':return'_dev_clearLog';case'@@debug on':return'_dev_debug_switch';case'@@debug off':return'_dev_debug_switch';default:return null;}}},{key:'badCommandSyntax',value:function badCommandSyntax(){this._botState.addActiveIntent(Intent.NO_INTENT());}},{key:'log',value:function log(message,entryType){if(this._debugMode){var logEntry={dateTime:this._.now(),entryType:entryType,loggedMessage:message};var rowsToRemove=this._.size(this._botState._log)-39;if(rowsToRemove>0){console.log('Deleting logs');this._botState._log.splice(0,rowsToRemove);}this._botState._log.push(logEntry);}}},{key:'debug',value:function debug(message){console.log('Adding log entry');this.log(message,LogEntrytype.DEBUG());}},{key:'processCommand',value:function processCommand(command){switch(command){case'_dev_reset_conversation':{this.resetConversation();break;}case'_dev_show_log':{this.showLog();break;}case'_dev_clearLog':{this.clearLogCommand();break;}case'_dev_debug_switch':{this.debugSwitch();break;}}}},{key:'debugSwitch',value:function debugSwitch(){this._debugMode=!this._debugMode;if(this._debugMode){this.debug('Debug mode set to active');this._botState.addStringResponse('Debug mode activated');}else{this.debug('Debug mode set to inactive');this._botState.addStringResponse('Debug mode deactivated');}}},{key:'showLog',value:function showLog(){var _this5=this;var options={title:'Logged data',description:'App log data'};var rows=[];this._.each(this._botState._log.reverse(),function(logEntry){var row={date:new Date(logEntry.dateTime),type:logEntry.entryType,message:logEntry.loggedMessage};if(_this5._botState.conversation.client===State.MOBILECLIENT()){row.title='Log Entry';}rows.push(row);});if(this._botState.conversation.client===State.WEBCLIENT()){this._botState.addResponse(this._botState.messageTypes.MESSAGE_TYPE_TABLE,{options:options,rows:rows});}else{this._botState.addResponse(this._botState.messageTypes.MESSAGE_TYPE_DATA_CARD,rows);}}},{key:'resetConversation',value:function resetConversation(){delete this._botState._activeIntent;delete this._botState._forms;delete this._botState._botFlows;this._botState._log=[];this._botState.lastGreetingTime=0;delete this._botState.errorStack;delete this._botState.fields;this._botState.waitingCustomCap=0;this._botState.promptAlive='';this._botState.clearSmartSuggestionsArray();this._botState.blockSuggestions=true;this._botState.addStringResponse('The conversation has been reset');this._botState.sendMessage({intentId:'@@reset'});}},{key:'clearLogCommand',value:function clearLogCommand(){var _this6=this;return new Promise(function(resolve,reject){_this6._botState.addStringResponse('The log has been cleared');_this6._botState._log=[];resolve();});}}]);return Developer;}();var Notification=function(){function Notification(botState){_classCallCheck(this,Notification);this['_botState']=botState;this['_']=botState._;if(this._botState.conversation.client===State.MOBILECLIENT()){this['notification']=this._botState.context.getCapability('Notification');}}_createClass(Notification,[{key:'sendEmail',value:function sendEmail(to,title,body,attachment){var params={address:to,body:body,title:title};if(attachment){params.attachments=[{fileContentName:attachment.name,jsonContent:attachment.content}];}return callLambda('EmailLambda',params,this._botState.context.aws).then(function(response){console.log('Back from email lambda '+JSON.stringify(response));var payload=JSON.parse(response.Payload);return payload;});}},{key:'isDeviceRegisteredForPush',value:function isDeviceRegisteredForPush(){var _this7=this;return this.notification.deviceInfo().then(function(deviceInfo){if(_this7._botState._.isEmpty(deviceInfo)){return false;}return deviceInfo.isRegistered;});}},{key:'registerDeviceForPushOnEdge',value:function registerDeviceForPushOnEdge(){var _this8=this;if(this._botState.conversation.client===State.MOBILECLIENT()){return this.notification.register().then(function(notificationDeviceInfo){return notificationDeviceInfo;}).catch(function(error){if(error){_this8._botState.addSystemErrorToStack(15);return error;}});}else{this._botState.addSystemErrorToStack(18);}}},{key:'deregisterDeviceForPushOnEdge',value:function deregisterDeviceForPushOnEdge(){var _this9=this;if(this._botState.conversation.client===State.MOBILECLIENT()){return this.notification.deregister().then(function(notificationDeviceInfo){return notificationDeviceInfo;}).catch(function(error){_this9._botState.addSystemErrorToStack(19,JSON.stringify(error));});}else{this._botState.addSystemErrorToStack(18);}}},{key:'registerDeviceForPushOnBackend',value:function registerDeviceForPushOnBackend(notificationDeviceInfo){try{var conversation=this._botState.conversation;var userId=this._botState.user.userId;var tariffParams={capability:'RegisterDevice',capabilityFileName:'deviceRegistration',deviceToken:notificationDeviceInfo.deviceId,deviceType:notificationDeviceInfo.deviceType,sync:true,userId:userId,conversation:conversation};return callLambda('CapabilityExecutorLambda',tariffParams,this._botState.context.aws);}catch(error){this._botState.addSystemErrorToStack(16,error.message);}}},{key:'deregisterDeviceForPushOnBackend',value:function deregisterDeviceForPushOnBackend(notificationDeviceInfo){try{var conversation=this._botState.conversation;var userId=this._botState.user.userId;var tariffParams={capability:'DeregisterDevice',capabilityFileName:'deviceRegistration',deviceToken:notificationDeviceInfo.deviceId,deviceType:notificationDeviceInfo.deviceType,sync:true,userId:userId,conversation:conversation};return callLambda('CapabilityExecutorLambda',tariffParams,this._botState.context.aws);}catch(error){this._botState.addSystemErrorToStack(16,error.message);}}}]);return Notification;}();var DB=function(){function DB(botState){_classCallCheck(this,DB);this['_botState']=botState;this['_']=botState._;}_createClass(DB,[{key:'getCatalogue',value:function getCatalogue(query){var _this10=this;var params={query:query,email:this._botState.user.userEmail};return callLambda('catalogueLambda',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this10._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'getData',value:function getData(table,query,scan){var _this11=this;var params={collection:table,query:query,scan:scan,capability:'GetData'};return callLambda('SystemCapabilities',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this11._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'getDataFromIndex',value:function getDataFromIndex(index,queryString,pageSize,sort,exactMatch){var _this12=this;var params={method:'GET',action:'search',index:this._botState._.toLower(index),q:queryString,size:pageSize,sort:sort,exact:exactMatch};return callLambda('elastiSearch',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this12._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'deleteDataFromIndex',value:function deleteDataFromIndex(index,type,objectId){var _this13=this;var params={method:'DELETE',index:this._botState._.toLower(index),q:objectId,type:type};return callLambda('elastiSearch',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this13._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'getDataFromIndexWithQueryObject',value:function getDataFromIndexWithQueryObject(index,queryObject){var _this14=this;var params={method:'GET',action:'bodySearch',index:this._botState._.toLower(index),q:queryObject};return callLambda('elastiSearch',params,this._botState.context.aws).then(function(response){console.log(JSON.stringify(response));return JSON.parse(response.Payload);}).catch(function(error){console.log(JSON.stringify(response));_this14._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'countDataInIndex',value:function countDataInIndex(index,queryString){var _this15=this;var params={method:'GET',action:'count',index:this._botState._.toLower(index),q:queryString};return callLambda('elastiSearch',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this15._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'writeDataIntoIndex',value:function writeDataIntoIndex(index,docType,doc){var _this16=this;var params={method:'POST',action:'insert',index:this._botState._.toLower(index),docType:docType,doc:doc};return callLambda('elastiSearch',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this16._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'writeData',value:function writeData(table,documents){var _this17=this;var params={collection:table,documents:documents,capability:'WriteData'};return callLambda('SystemCapabilities',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this17._botState.addSystemErrorToStack(7,error.errorMessage);});}},{key:'deleteData',value:function deleteData(table,query){var _this18=this;var params={collection:table,query:query,capability:'DeleteData'};return callLambda('SystemCapabilities',params,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);}).catch(function(error){_this18._botState.addSystemErrorToStack(7,error.errorMessage);});}}]);return DB;}();var API=function(){function API(botState){_classCallCheck(this,API);this['_botState']=botState;this['_']=botState._;}_createClass(API,[{key:'callService',value:function callService(service,options){var _this19=this;console.log('*************** Inside call service');var params={userDomain:this._botState.conversation.userDomain,serviceName:service,queryParams:this._.get(options,'queryParams'),pathParams:this._.get(options,'pathParams'),header:this._.get(options,'header'),body:this._.get(options,'body'),sync:true,conversation:this._botState.conversation};return callLambda('GetDataFromApi',params,this._botState.context.aws).then(function(response){var payload=JSON.parse(response.Payload);console.log('Answer from callDataFromAPI: '+JSON.stringify(payload));console.log(typeof payload);if(_this19._.get(payload,'error')){_this19._botState.addSystemErrorToStack(7,payload.error);}return payload;});}}]);return API;}();var JobScheduler=function(){function JobScheduler(botState){_classCallCheck(this,JobScheduler);this['_botState']=botState;this['_']=botState._;}_createClass(JobScheduler,[{key:'addNewJob',value:function addNewJob(client,params,jobId,repeats){var scheduleJobParams={jobId:jobId,capability:'ScheduleBatchJob',conversation:this._botState.conversation,params:this._botState.cleanFieldsForSave(params),repeats:repeats,requestUuid:'99999999999999',scheduledCapability:this._botState.conversation.bot+'_CustomCap',userEmail:this._botState.user.userEmail,userId:this._botState.user.userId,userDomain:this._botState.conversation.userDomain,botId:this._botState.conversation.bot,client:client,schedule:_.get(params,'schedule')};console.log(scheduleJobParams);return callLambda('SystemCapabilities',scheduleJobParams,this._botState.context.aws).then(function(response){return JSON.parse(response.Payload);});}},{key:'deleteJob',value:function deleteJob(jobId){var scheduleJobParams={jobId:jobId,capability:'DeleteJob'};console.log(scheduleJobParams);return callLambda('SystemCapabilities',scheduleJobParams,this._botState.context.aws);}}]);return JobScheduler;}();var BotFlow=function(){function BotFlow(botState,name,botFlowFromStorage){_classCallCheck(this,BotFlow);this['_botState']=botState;this['_']=botState._;if(!botFlowFromStorage){this['_name']=name;this['_started']=false;this['_entities']=[];this['_steps']=[];this['_currentStep']=0;}else{this['_name']=botFlowFromStorage._name;this['_started']=botFlowFromStorage._started;var allEntitiesFromStorage=[];this._.forEach(botFlowFromStorage._entities,function(entity){var theNewEntity=new BotFlowEntity(botState,entity.name,entity);allEntitiesFromStorage.push(theNewEntity);});this['_entities']=allEntitiesFromStorage;this['_steps']=botFlowFromStorage._steps;this['_currentStep']=botFlowFromStorage._currentStep;}this._onStart=function(){};this._onEnd=function(){};}_createClass(BotFlow,[{key:'getAllProperties',value:function getAllProperties(){var entitiesArray=[];this._.forEach(this._entities,function(entity){entitiesArray.push(entity.getAllFields());});return{_name:this._name,_started:this._started,_entities:entitiesArray,_steps:this._steps,_currentStep:this._currentStep};}},{key:'start',value:function start(){if(!this._started){this._currentStep=0;this._started=true;this._onStart(this);if(this._botState.developer._debugMode){this._botState.developer.debug('Starting botFlow '+this._name);}}}},{key:'reset',value:function reset(){var _this20=this;if(this._started){this._.each(this._steps,function(step){_this20._.each(step,function(intent){intent.done=false;});});this._entities=[];if(this._botState.developer._debugMode){this._botState.developer.debug('Ending botFlow '+this._name);}this._started=false;}}},{key:'end',value:function end(){if(this._started){this.reset();this._onEnd(this);}}},{key:'getCurrentStep',value:function getCurrentStep(){return this._steps[this._currentStep];}},{key:'getFirstStep',value:function getFirstStep(){return this._steps[0];}},{key:'addStep',value:function addStep(intentsArray){var intentsStepArray=[];this._.each(intentsArray,function(intent){var intentsStep={intentId:intent.intentId,done:false};intentsStepArray.push(intentsStep);});this._steps.push(intentsStepArray);}},{key:'markCurrentStepAsCompleted',value:function markCurrentStepAsCompleted(){this._.each(this.getCurrentStep(),function(intent){intent.done=true;});if(this._currentStep<this._.size(this._steps)-1){this._currentStep++;}else{this.end();}}},{key:'goToStep',value:function goToStep(stepNumber){if(stepNumber<this._botState._.size(this._steps)&&stepNumber>this._currentStep){while(this._currentStep<stepNumber){this.markCurrentStepAsCompleted();}}}},{key:'markIntentResolved',value:function markIntentResolved(intentId){if(this.isStarted){var step=this._steps[this._currentStep];var intentIndex=this._.findIndex(step,function(intentStep){return intentStep.intentId===intentId;});if(intentIndex>-1){var intentStep=step[intentIndex];intentStep.done=true;var stepCompleted=true;this._.forEach(step,function(intentStep){if(!intentStep.done){stepCompleted=false;}});if(stepCompleted){if(this._currentStep<this._.size(this._steps)-1){this._currentStep+=1;}else{this.end();}}}}}},{key:'getEntity',value:function getEntity(entityName){var i=this._.findIndex(this._entities,function(entity){return entity.name===entityName;});return this._entities[i]||null;}},{key:'addEntity',value:function addEntity(entity){this._entities.push(entity);}},{key:'name',get:function get(){return this._name;}},{key:'isStarted',get:function get(){return this._started;}},{key:'onStart',set:function set(onStartBlock){this._onStart=onStartBlock;}},{key:'onEnd',set:function set(onEndBlock){this['_onEnd']=onEndBlock;}},{key:'currentStepIndex',get:function get(){return this._currentStep;}},{key:'steps',get:function get(){return this._steps;}}]);return BotFlow;}();var BotFlowEntity=function(){_createClass(BotFlowEntity,null,[{key:'LOCKED',value:function LOCKED(){return'Locked';}},{key:'CACHED',value:function CACHED(){return'Cached';}},{key:'IDLE',value:function IDLE(){return'Idle';}}]);function BotFlowEntity(botState,name,entityFromStorage){_classCallCheck(this,BotFlowEntity);if(!entityFromStorage){this['name']=name;this['_']=botState._;this['state']=BotFlowEntity.IDLE();this['_linkedForm']='';this['_promptIndex']=0;}else{this['_']=botState._;this.addFieldsFromObject(entityFromStorage);}}_createClass(BotFlowEntity,[{key:'addFieldsFromObject',value:function addFieldsFromObject(record){for(var field in record){this[field]=record[field];}}},{key:'getAllFields',value:function getAllFields(){var allFields={};for(var field in this){if(field!=='_'){allFields[field]=this[field];}}return allFields;}},{key:'addFieldsFromForm',value:function addFieldsFromForm(record){var _this21=this;this._.each(record.fields,function(field){_this21[field.id]=field.value;});}},{key:'moveToNextPrompt',value:function moveToNextPrompt(){this._promptIndex++;}},{key:'read',value:function read(){}},{key:'readWithLock',value:function readWithLock(){}},{key:'save',value:function save(){}},{key:'delete',value:function _delete(){}},{key:'form',set:function set(form){this._linkedForm=form;},get:function get(){return this._linkedForm;}},{key:'promptIndex',get:function get(){return this._promptIndex;}},{key:'onSave',get:function get(){return this['_onSave'];},set:function set(onSaveBlock){this['_onSave']=onSaveBlock;}},{key:'onDelete',get:function get(){return this['_onDelete'];},set:function set(onSaveBlock){this['_onDelete']=onSaveBlock;}}]);return BotFlowEntity;}();var FormFieldTypes=function(){function FormFieldTypes(){_classCallCheck(this,FormFieldTypes);}_createClass(FormFieldTypes,null,[{key:'TEXT_FIELD',value:function TEXT_FIELD(){return'text_field';}},{key:'NUMBER_FIELD',value:function NUMBER_FIELD(){return'number';}},{key:'TEXT_AREA',value:function TEXT_AREA(){return'text_area';}},{key:'CHECKBOX',value:function CHECKBOX(){return'checkbox';}},{key:'RADIOBUTTON',value:function RADIOBUTTON(){return'radiobutton';}},{key:'DROPDOWN',value:function DROPDOWN(){return'dropdown';}},{key:'SWITCH',value:function SWITCH(){return'switch';}},{key:'SLIDER',value:function SLIDER(){return'slider';}},{key:'DATE',value:function DATE(){return'date';}},{key:'MULTI_SELECTION',value:function MULTI_SELECTION(){return'multi_selection';}},{key:'PASSWORD_FIELD',value:function PASSWORD_FIELD(){return'password_field';}}]);return FormFieldTypes;}();var Form=function(){function Form(botState,options,formFromStorage){_classCallCheck(this,Form);this['_botState']=botState;if(!formFromStorage){this['_options']=options||{};this['_fields']=[];this['_open']=false;}else{this['_options']=formFromStorage._options;this['_fields']=formFromStorage._fields||[];this['_open']=formFromStorage._open;}}_createClass(Form,[{key:'getAllProperties',value:function getAllProperties(){return{_options:this._options,_fields:this._fields,_open:this._open};}},{key:'openForm',value:function openForm(){this._open=true;}},{key:'closeForm',value:function closeForm(){this._open=false;this._botState.addResponse('form_close',{formId:this._options.formId});}},{key:'getField',value:function getField(fieldId){var index=this._botState._.findIndex(this._fields,function(field){return fieldId===field.id;});if(index>-1){return this._fields[index];}else{return null;}}},{key:'clearAllFields',value:function clearAllFields(){this._botState._.each(this._fields,function(field){delete field.value;});}},{key:'assignValueToField',value:function assignValueToField(fieldId,value){var field=this.getField(fieldId);if(field){field.value=value;}}},{key:'addField',value:function addField(newField){var index=this._botState._.findIndex(this._fields,function(field){return field.id===newField.id;});if(index===-1){this._fields.push(newField);}}},{key:'formId',get:function get(){return this._options.formId;}},{key:'isOpen',get:function get(){return this._open;}},{key:'options',get:function get(){return this._options;}},{key:'fields',get:function get(){return this._fields;},set:function set(fields){this._fields=fields;}},{key:'onSubmit',set:function set(onSubmitBlock){this['_onSubmit']=onSubmitBlock;},get:function get(){return this['_onSubmit'];}}]);return Form;}();var Orders=function(){function Orders(botState){_classCallCheck(this,Orders);this['_botState']=botState;this['context']=botState.context;this['userId']=botState.user.userId;this['conversation']=botState.conversation;this['location']=botState.location;if(this.conversation.client===State.MOBILECLIENT()&&this.location===Intent.EDGE()){if(botState.conversation.client===State.MOBILECLIENT()){this['inAppPurchaseCap']=this.context.getCapability('InAppPurchase');this['productTypes']=this.inAppPurchaseCap.PRODUCT_NAMES;}else{this['inAppPurchaseCap']='false';this['productTypes']=[];}}}_createClass(Orders,[{key:'inAppPurchase',value:function inAppPurchase(product){if(this.location===Intent.CLOUD()||this.conversation.client===State.WEBCLIENT()){this._botState.addSystemErrorToStack(13);return;}return this.inAppPurchaseCap.buyProduct({productCode:product,productName:this.productTypes.VOIP});}},{key:'processStripePayment',value:function processStripePayment(){console.log('Before stripe request: '+JSON.stringify(this._botState.messageFromUser));var token=this._botState._.get(this._botState,'messageFromUser.token');if(token){var amount=this._botState._.get(this._botState,'messageFromUser.amount');var params={action:'charge',token:token,amount:amount,currency:this._botState._.get(this._botState,'messageFromUser.currency'),description:this._botState._.get(this._botState,'messageFromUser.description'),sync:true,conversation:this._botState.conversation};return callLambda('paymentsProcessor',params,this.context.aws).then(function(response){return JSON.parse(response.Payload);});}}}]);return Orders;}();var Accounts=function(){function Accounts(botState){_classCallCheck(this,Accounts);this['_botState']=botState;this['context']=botState.context;this['userId']=botState.user.userId;this['conversation']=botState.conversation;this['location']=botState.location;}_createClass(Accounts,[{key:'getBalance',value:function getBalance(account){var conversation=this.conversation;var userId=this.userId;var params={capability:'MessageQuotaCapability',capabilityFileName:'messageQuotaCapability',action:'getSpecificQuota',sync:true,userId:userId,conversation:conversation,botId:account};console.log('params '+JSON.stringify(params));return callLambda('CapabilityExecutorLambda',params,this.context.aws).then(function(response){return JSON.parse(response.Payload);});}},{key:'storeBalance',value:function storeBalance(account,balance){var conversation=this.conversation;var userId=this.userId;var params={capability:'MessageQuotaCapability',capabilityFileName:'messageQuotaCapability',action:'incrementUserAssignedQuota',sync:true,userId:userId,conversation:conversation,stats:{}};params.stats[account]=balance;return callLambda('CapabilityExecutorLambda',params,this.context.aws);}},{key:'getCallRates',value:function getCallRates(isoCountry){try{var conversation=this.conversation;var userId=this.userId;var tariffParams={capability:'VoipCapability',capabilityFileName:'voipCapability',action:'getCallTariffsForCountry',isoCountry:isoCountry,sync:true,userId:userId,conversation:conversation};return callLambda('CapabilityExecutorLambda',tariffParams,this.context.aws).then(function(response){console.log('Response from custom cap: '+JSON.stringify(response));return JSON.parse(response.Payload);});}catch(error){this._botState.addSystemErrorToStack(8,error.message);}}},{key:'getCallHistory',value:function getCallHistory(){try{var callHistoryParams={action:'getCallHistory',capability:'VoipCapability',capabilityFileName:'voipCapability',userId:this.userId,conversation:this.conversation,sync:true,email:this._botState.user.userEmail};console.log('Param: '+JSON.stringify(callHistoryParams));return callLambda('CapabilityExecutorLambda',callHistoryParams,this.context.aws).then(function(response){console.log('Response from custom cap: '+JSON.stringify(response));return JSON.parse(response.Payload);});}catch(error){this._botState.addSystemErrorToStack(8,error.message);}}}]);return Accounts;}();var Error=function(){_createClass(Error,null,[{key:'getErrorMessageforCodeAndLang',value:function getErrorMessageforCodeAndLang(errorCode,lang){var errorsLibrary={0:{en:'No error'},1:{en:'The valid values for RunLocation are Edge and Cloud'},2:{en:'RunLocation attribute is mandatory'},3:{en:'The onResolution function is mandatory'},4:{en:'Error calling Custom Capability'},5:{en:'Error in edge bot logic with message '},6:{en:'NLP cannot be called with other data than string'},7:{en:'Error processing botResolver in backend'},8:{en:'Error in cloud bot logic with message '},9:{en:'The name for the bot name already exists for your domain, please change it and try again'},10:{en:'An unknown problem has appeared during the bot publication process. Please contact FrontM support.'},11:{en:'Logic error in onError function'},12:{en:'Wrong debug command'},13:{en:'I Cannot run inApp purchases in the cloud'},14:{en:'Invalid message adding a response'},15:{en:'I have not received the authorisation to activate the notifications. You can request me to activate the notifications in any time.'},16:{en:'I could not register your device for notifications at this moment. Please try again later'},17:{en:'Password update error. '},18:{en:'Capability not available on the cloud'},19:{en:'I encountered a problem unregistering your device for notifications'},20:{en:'I could not deregister your device for notifications at this moment. Please try again later'}};return errorsLibrary[errorCode][lang];}}]);function Error(botState,errorCode,errorMessage){_classCallCheck(this,Error);this._errorCode=errorCode;if(errorCode<1000){if(errorMessage){this._errorMessage=Error.getErrorMessageforCodeAndLang(errorCode,botState.lang)+' '+errorMessage;}else{this._errorMessage=Error.getErrorMessageforCodeAndLang(errorCode,botState.lang);}}else{this._errorMessage=errorMessage;}}_createClass(Error,[{key:'errorCode',get:function get(){return this._errorCode;}},{key:'errorMessage',get:function get(){return this._errorMessage;}}]);return Error;}();var State=function(){_createClass(State,null,[{key:'MOBILECLIENT',value:function MOBILECLIENT(){return'mobile';}},{key:'WEBCLIENT',value:function WEBCLIENT(){return'web';}}]);function State(message,conversation,user,location,stateFromStorage,context){var _this22=this;_classCallCheck(this,State);this['conversationId']=conversation.conversationId;this['conversation']=conversation;this['lang']='en';this['_activeIntent']='';this['error']=false;this['errorStack']=[];this['responsesArray']=[];this['smartSuggestionsArray']=[];this['_blockSuggestions']=false;this['toCustomCap']=false;this['user']=user;this['intentResolved']=false;this['waitingCustomCap']=0;this['location']=location;this['requestIdsArray']=[];this['context']=null;this['_']=null;this['messageTypes']=null;this['lastGreetingTime']=0;this['MessageCapability']=null;this['_forms']=[];this['_botFlows']=[];this['_log']=[];this['fields']={};this['logoutInProcess']=false;this.setContext(context);this['lastSession']=this._.toNumber(this._.now());this['accounts']=new Accounts(this);this['orders']=new Orders(this);this['developer']=new Developer(this);this['notification']=new Notification(this);this['marketplace']=new Marketplace(this);this['jobScheduler']=new JobScheduler(this);this['api']=new API(this);this['db']=new DB(this);this['promptAlive']='';this['amIOnline']=true;this['_searchBoxes']=[];if(stateFromStorage){for(var propertyName in stateFromStorage){if(propertyName==='_botFlows'){this._.each(stateFromStorage[propertyName],function(botFlowFromStorage){var botFlow=new BotFlow(_this22,botFlowFromStorage._name,botFlowFromStorage);_this22._botFlows.push(botFlow);});}else if(propertyName==='_forms'){this._.each(stateFromStorage[propertyName],function(formFromStorage){var form=new Form(_this22,null,formFromStorage);_this22._forms.push(form);});}else if(propertyName==='_debugMode'){this.developer._debugMode=true;}else{this[propertyName]=stateFromStorage[propertyName];}}}if(this.location===Intent.EDGE()){this['client']=this.conversation.client;}else{if(!this['client']){this['client']=State.MOBILECLIENT();}}if(message){if(message.messageType){this['messageTypeFromUser']=message.messageType;this['messageFromUser']=message.messageFromUser||'';}else{this['messageTypeFromUser']=message.getMessageType();this['messageFromUser']=message.getMessage();}}console.log('*************** message type: '+this['messageTypeFromUser']);console.log('*************** message: '+JSON.stringify(this['messageFromUser']));this.defaultOnError=function(){_this22._.forEach(_this22.errorStack,function(error){_this22.addStringResponse(error.errorMessage);});};this.resetOnErrorMethod();}_createClass(State,[{key:'resetOnErrorMethod',value:function resetOnErrorMethod(){this.clearError();this._onError=this.defaultOnError;}},{key:'online',value:function online(){var network=this.context.getCapability('Network');return network.isConnected().then(function(connected){return connected;});}},{key:'addSearchBox',value:function addSearchBox(searchBox){var existingSearchBox=this.getSearchBox(searchBox.name);if(!existingSearchBox){this._searchBoxes.push(searchBox);}else{existingSearchBox.onSearch=searchBox._onSearch;}}},{key:'getSearchBox',value:function getSearchBox(searchBoxName){var i=this._.findIndex(this._searchBoxes,function(searchBox){return searchBox.name===searchBoxName;});return this._botFlows[i]||null;}},{key:'addBotFlow',value:function addBotFlow(botFlow){var existingBotFlow=this.getBotFlow(botFlow.name);if(!existingBotFlow){this._botFlows.push(botFlow);}else{existingBotFlow.onStart=botFlow._onStart;}}},{key:'getBotFlow',value:function getBotFlow(botFlowName){var i=this._.findIndex(this._botFlows,function(botFlow){return botFlow.name===botFlowName;});return this._botFlows[i]||null;}},{key:'runLocationVerification',value:function runLocationVerification(method,location){var locationPassed=location===this.location;if(!locationPassed){this.addErrorToStack(1,'Method '+method+' cannot run on the '+this.location);}return locationPassed;}},{key:'setNetworkModeTo',value:function setNetworkModeTo(mode){return this.context.getCapability('Settings').setPollingStrategy(mode);}},{key:'setContext',value:function setContext(context){var _this23=this;this.context=context;if(this.location===Intent.EDGE()){this['userName']=this.user.info.userName;var utils=this.context.getCapability('Utils');this._=utils.Lodash;this.UUID=utils.UUID;this.messageTypes=this.context.getCapability('MessageTypeConstants');this.MessageCapability=this.context.getCapability('Message');this.userDomains=this.user.info.domains;}else{this._=this.context._;this.UUID=function(){var ShortUUID=_this23.context.UUID;var uuid=ShortUUID.uuid();return ShortUUID().fromUUID(uuid);};this.userDomains=this.conversation.userDomains;}}},{key:'syncWithBackendState',value:function syncWithBackendState(state){var _this24=this;if(this.messageTypeFromUser===BACKEND_RESULTS){console.log(JSON.stringify(state));if(state.intentResolved){this.intentResolved=state.intentResolved;}console.log('About to sync botFlows');if(state._botFlows){console.log('Botflows from backend '+JSON.stringify(state._botFlows));var botFlowArray=[];this._.each(state._botFlows,function(botFlowFromBackend){var botFlow=new BotFlow(_this24,botFlowFromBackend._name,botFlowFromBackend);botFlowArray.push(botFlow);});this._botFlows=botFlowArray;}if(state.responsesArray){this._.each(state.responsesArray,function(response){if(response.type==='form2'){var form=_this24.getForm(response.message._options.formId);if(form){form.fields=response.message._fields;}else{form=new Form(_this24,null,response.message);_this24.addForm(form);}_this24.addResponse('form2',form);}else if(response.type==='prompt'){_this24._.each(_this24.botFlows,function(botFlow){var entity=botFlow.getEntity(response.message.name);if(entity){var newMessage={type:response.type,message:entity};_this24.responsesArray.push(newMessage);}});}else{_this24.responsesArray.push(response);}});}if(state._activeIntent){this.addActiveIntent(state._activeIntent);}if(state.action){this.action=state.action;}if(state.nlpResponse){this.nlpResponse=state.nlpResponse;}if(state.nlpParameters){this.nlpParameters=state.nlpParameters;}if(state.errorStack){this._.each(state.errorStack,function(error){if(error._errorCode<1000){_this24.addSystemErrorToStack(error._errorCode);}else{_this24.addErrorToStack(error._errorCode,error._errorMessage);}});}if(state.smartSuggestionsArray){this.smartSuggestionsArray=state.smartSuggestionsArray;}console.log('Starting with logs');console.log(JSON.stringify(state._log));if(state._log){this._.each(state._log,function(logEntry){_this24._log.push(logEntry);});}console.log('After logs');for(var field in state.fields){this.fields[field]=state.fields[field];}if(state.sendMessageParam){this.sendMessageParam=state.sendMessageParam;}if(state._blockSuggestions){this.blockSuggestions=true;}if(state.nlpParameters){this.nlpParameters=state.nlpParameters;}if(state.clearPrompt){this.promptAlive='';}}else{console.log('I have not synced anything');}}},{key:'exitPrompt',value:function exitPrompt(){this.promptAlive='';this.clearPrompt=true;}},{key:'getNewRequestId',value:function getNewRequestId(){if(this.UUID){return this.UUID();}else{return null;}}},{key:'getAllProperties',value:function getAllProperties(){var botFlowArray=[];this._.forEach(this._botFlows,function(botFlow){botFlowArray.push(botFlow.getAllProperties());});var formsArray=[];this._.forEach(this._forms,function(form){formsArray.push(form.getAllProperties());});var response={conversationId:this['conversationId'],smartSuggestionsArray:this['smartSuggestionsArray'],toCustomCap:this['toCustomCap'],intentResolved:this['intentResolved'],waitingCustomCap:this['waitingCustomCap'],lastGreetingTime:this['lastGreetingTime'],_log:this._log};if(this.promptAlive!==''){response.promptAlive=this.promptAlive;}if(this._activeIntent!==''){response._activeIntent=this._activeIntent;}if(this._.size(this['errorStack'])>0){response.errorStack=this['errorStack'];}if(this._.size(this['responsesArray'])>0){response.responsesArray=this['responsesArray'];}if(this._.size(this['requestIdsArray'])>0){response.requestIdsArray=this['requestIdsArray'];}if(this._.size(botFlowArray)>0){response._botFlows=botFlowArray;}if(this._.size(formsArray)>0){response._forms=formsArray;}response.fields=this.fields;if(this.developer._debugMode){response._debugMode=true;}return response;}},{key:'runFunctionOnceAnHour',value:function runFunctionOnceAnHour(functionBlock){var latestTime=this._.now();if(this._.toNumber(latestTime)-this._.toNumber(this.lastGreetingTime)>3600000){this.lastGreetingTime=latestTime;functionBlock();}}},{key:'updatePassword',value:function updatePassword(oldPassword,newPassword){var _this25=this;var updatedUser={email:this.user.userEmail,oldPassword:oldPassword,newPassword:newPassword};return this.context.getCapability('authContext').updatePassword(updatedUser,this.context).then(function(response){console.log('Password response :',JSON.stringify(response));}).catch(function(error){console.log('Password update error :',JSON.stringify(error));_this25.addSystemErrorToStack(17,error.message);});}},{key:'logout',value:function logout(){this['logoutInProcess']=true;return this.context.getCapability('authContext').logout(this.context);}},{key:'sendMessage',value:function sendMessage(message){console.log('============> setting send  message param');this.sendMessageParam=message;}},{key:'cleanFieldsForSave',value:function cleanFieldsForSave(fields){var _this26=this;var cleanFields={};if(typeof fields==='string'){if(fields===''){fields=null;}return fields;}else if(typeof fields==='object'){if(Array.isArray(fields)){var newArray=[];this._.each(fields,function(entry){var newEntry=_this26.cleanFieldsForSave(entry);newArray.push(newEntry);});return newArray;}else{for(var properyName in fields){var theField=fields[properyName];switch(typeof theField){case'string':{cleanFields[properyName]=this.cleanFieldsForSave(theField);break;}case'object':{cleanFields[properyName]=this.cleanFieldsForSave(theField);break;}default:{cleanFields[properyName]=theField;break;}}}}}else{return fields;}return cleanFields;}},{key:'save',value:function save(){var _this27=this;if(!this['logoutInProcess']){this.fields=this.cleanFieldsForSave(this.fields);return deviceStorageUtil.setInContext(this.getAllProperties(),this.context).then(function(){console.log('State Saved');_this27.error=false;return _this27;}).catch(function(err){console.log('State not Saved '+err.message);_this27.error=true;return _this27;});}}},{key:'getUniqueId',value:function getUniqueId(){return this.UUID();}},{key:'setField',value:function setField(fieldName,fieldValue){this.fields[fieldName]=fieldValue;}},{key:'clearField',value:function clearField(fieldName){this.fields[fieldName]=null;}},{key:'getField',value:function getField(fieldName){var field=this.fields[fieldName];if(field&&this._.size(field)>0){return field;}else{return null;}}},{key:'addSmartSuggestions',value:function addSmartSuggestions(newSmartSuggestion){this.smartSuggestionsArray.push(newSmartSuggestion);}},{key:'addSmartSuggestionsArray',value:function addSmartSuggestionsArray(newSmartSuggestions){var _this28=this;var _=this._;_.each(newSmartSuggestions,function(suggestionObject){if(suggestionObject.lang===_this28.lang){_this28.smartSuggestionsArray=_this28.smartSuggestionsArray.concat(suggestionObject.list);}});}},{key:'addEnglishSmartSuggestions',value:function addEnglishSmartSuggestions(newSmartSuggestions){var smartSuggestionsArray=[{lang:'en',list:newSmartSuggestions}];this.addSmartSuggestionsArray(smartSuggestionsArray);}},{key:'setDefaultSmartSuggestions',value:function setDefaultSmartSuggestions(bot){var _this29=this;if(this.smartSuggestionsArray.length===0&&!this.blockSuggestions){var _2=this._;var intentsAdded=[];var addedSuggestions=function addedSuggestions(intentStep){var index=_this29._.findIndex(bot,function(intent){return intentStep.intentId===intent.intentId;});if(bot[index].suggestionsArray&&!intentStep.done){_this29.addSmartSuggestionsArray(bot[index].suggestionsArray);}};var startedBotFlows=false;_2.each(this._botFlows,function(botFlow){if(botFlow.isStarted){startedBotFlows=true;return false;}});_2.each(this._botFlows,function(botFlow){var stepCount=0;_2.each(botFlow.steps,function(step){_2.each(step,function(intentStep){intentsAdded.push(intentStep.intentId);if(botFlow.isStarted){if(stepCount===botFlow.currentStepIndex){addedSuggestions(intentStep);}}else if(!startedBotFlows){if(stepCount===0){addedSuggestions(intentStep);}}});stepCount+=1;});});_2.each(bot,function(intent){if(intent.suggestionsArray&&intentsAdded.indexOf(intent.intentId)===-1){_this29.addSmartSuggestionsArray(intent.suggestionsArray);}});}}},{key:'clearSmartSuggestionsArray',value:function clearSmartSuggestionsArray(){this.smartSuggestionsArray=[];this._blockSuggestions=false;}},{key:'getForm',value:function getForm(formId){var i=this._.findIndex(this._forms,function(form){return form.formId===formId;});return this._forms[i]||null;}},{key:'addForm',value:function addForm(newForm){var form=this.getForm(newForm.formId);if(form){form.onSubmit=newForm.onSubmit;this._.each(form.fields,function(field){field.onCompletion=newForm.getField(field.id).onCompletion;field.onSearch=newForm.getField(field.id).onSearch;});}else{this._forms.push(newForm);}}},{key:'removeForm',value:function removeForm(formToDelete){var i=this._.findIndex(this._forms,function(form){return formToDelete.formId===form.formId;});if(i>-1){this._forms.splice(i,1);}}},{key:'addActiveIntent',value:function addActiveIntent(intentId){this._activeIntent=intentId;}},{key:'removeActiveIntent',value:function removeActiveIntent(){this._activeIntent='';}},{key:'addSystemErrorToStack',value:function addSystemErrorToStack(code,message){var errorObject=new Error(this,code,message);this.developer.log(errorObject.errorMessage,LogEntrytype.SYSTEM_ERROR());this.errorStack.push(errorObject);}},{key:'addErrorToStack',value:function addErrorToStack(code,message){var errorObject={};if(code<999){errorObject=new Error(this,1000,message);}else{errorObject=new Error(this,code,message);}this.developer.log(errorObject.errorMessage,LogEntrytype.USER_ERROR());this.errorStack.push(errorObject);}},{key:'clearError',value:function clearError(){this.errorStack=[];}},{key:'addStringResponse',value:function addStringResponse(message){this.addResponse('string',message);}},{key:'addResponse',value:function addResponse(type,message){if(this.developer._debugMode){if(type==='string'){this.developer.debug('Added response '+message);}else if(type==='form2'){this.developer.debug('Added response '+JSON.stringify(message.getAllProperties())+' of type '+type);}else{this.developer.debug('Added message type '+type);}}if(message){var messageToView=message;if(type==='form2'&&this.location===Intent.CLOUD()){messageToView=message.getAllProperties();}this.responsesArray.push({type:type,message:messageToView});}else{this.addSystemErrorToStack(14,type);}}},{key:'clearResponseArray',value:function clearResponseArray(){this.responsesArray=[];}},{key:'setWaitingCustomCap',value:function setWaitingCustomCap(){this.waitingCustomCap+=1;}},{key:'resetWaitingForCustomCapCounter',value:function resetWaitingForCustomCapCounter(){this.waitingCustomCap=0;}},{key:'addRequestId',value:function addRequestId(requestId){this.requestIdsArray.push(requestId);}},{key:'markRequestIdProcessed',value:function markRequestIdProcessed(requestId){if(requestId==='99999999999999'){return true;}var indexOfRequestId=this.requestIdsArray.indexOf(requestId);if(indexOfRequestId!==-1){console.log('deleting requestId');this.requestIdsArray.splice(indexOfRequestId,1);if(this.waitingCustomCap>0){this.waitingCustomCap-=1;}return true;}else{console.log('did not find requestId');return false;}}},{key:'loadAPIParameters',value:function loadAPIParameters(serviceName,publicFlag,APIdomain){console.log('Inside LoadAPIParameters');if(this.location===Intent.CLOUD()){var domain=this.conversation.userDomain;if(APIdomain){domain=APIdomain;}if(publicFlag){domain=PUBLICDOMAIN;}var lambdaParams={collection:'APIParameters',query:[{operand:'userDomain',value:domain},{operand:'serviceName',value:serviceName}],capability:'GetData',botDomain:domain,sync:true};return invokeLambda(lambdaParams,'SystemCapabilities',this.context.aws);}}},{key:'getDataFromService',value:function getDataFromService(apiKey,apiService,serviceInput,domain){console.info('Service at getDataFromService: '+apiService);var getServiceDataParams={userDomain:domain,service:apiService,queryString:'key='+apiKey+'&q='+serviceInput+'&format=json',sync:true};console.info('Query String to getDataFromService: '+getServiceDataParams.queryString);return invokeLambda(getServiceDataParams,'GetDataFromService',this.context.aws);}},{key:'callBing',value:function callBing(q){var headers={'Ocp-Apim-Subscription-Key':'b6b1d246a3324d8d8c0a43d9b5ee6135'};var uri='https://api.cognitive.microsoft.com/bing/v7.0/search?q='+q;var search_options={method:'GET',uri:uri,headers:headers,json:true};return this.context.requestPromise.get(search_options);}},{key:'callWebhose',value:function callWebhose(query_params){var client=this.context.webhoseio.config({token:'9da9372c-42fd-4581-969d-33fe7ca8d928'});return client.query('filterWebContent',query_params);}},{key:'callWikipedia',value:function callWikipedia(query){var encodedStr=encodeURIComponent(query);var url='https://en.wikipedia.org/w/api.php?action=query&format=json&list=search&srsearch='+encodedStr+'&prop=extracts|info&generator=search&inprop=url&gsrsearch='+encodedStr+'&titles='+encodedStr+'&redirects=&exintro=true&exsentences=2&explaintext=true&utf8=';var wiki_search={method:'GET',uri:url};console.log('Calling Wikipedia');return this.context.requestPromise.get(wiki_search);}},{key:'getWeatherInLocationAndTime',value:function getWeatherInLocationAndTime(location,dateTime){var _this30=this;var _=this._;var getHourData=function getHourData(date,weatherData){var hourData=[];var days=[];var firstDayIndex=void 0;var dayList=_.get(weatherData,'data.weather');if(_.isEmpty(date)){date=new Date().toISOString().slice(0,10);firstDayIndex=_.findIndex(dayList,function(day){return day.date===date;});days.push(dayList[firstDayIndex]);}else{console.info('Getting hour data for date:',date);firstDayIndex=_.findIndex(dayList,function(day){return day.date===date.fromDate;});if(firstDayIndex!==-1){days.push(dayList[firstDayIndex]);}if(!_.isUndefined(date.toDate)){if(_.findIndex(dayList,function(day){return day.date===date.toDate;})!==-1){days.push(dayList[++firstDayIndex]);}}}console.info('Days : ',days.length);_.each(days,function(day){var data={};var hourlyList=[];data.date=day.date;console.info('Date: ',day.date);var hourlyArray=_.get(day,'hourly');_.each(hourlyArray,function(curHourForecast){hourlyList.push({time:_.replace(curHourForecast.time,'00',':00'),precip:curHourForecast.precipMM,humidity:curHourForecast.humidity,tempC:curHourForecast.tempC,tempF:curHourForecast.tempF,windDir:curHourForecast.winddir16Point,windSpeed:curHourForecast.windspeedKmph,weatherDesc:curHourForecast.weatherDesc[0].value});});data.hourlyWeather=hourlyList;hourData.push(data);});console.info('Returning value from getHoursData: ',JSON.stringify(hourData));return hourData;};var latLong={};var latLongList=[];var weatherDataResult={};console.log('Getting weather from API');return new Promise(function(resolve,reject){if(_.isUndefined(location)){weatherDataResult.message='Sorry! location is required to get weather data';resolve(weatherDataResult);}else{_this30.loadAPIParameters('WebSearch',false,'locationiq.org').then(function(apiParamsData){var apiParams=JSON.parse(apiParamsData.Payload).items[0];console.info('Got api key for location IQ: '+apiParams.apiKey);console.info('Location to get co-ordinates: '+JSON.stringify(location));return _this30.getDataFromService(apiParams.apiKey,'WebSearch',location,'locationiq.org');}).then(function(locationIqResponse){var locationData=JSON.parse(locationIqResponse.Payload);for(var _location in locationData){var currentLocation=locationData[_location];latLongList.push({latitude:currentLocation.lat,longitude:currentLocation.lon});}latLong.latitude=latLongList[0].latitude;latLong.longitude=latLongList[0].longitude;return _this30.loadAPIParameters('MaritimeWeather',false,'weatherworld.com');}).then(function(apiParamsData){var apiParams=JSON.parse(apiParamsData.Payload).items[0];console.info('Got api key for maritime weather'+apiParams.apiKey);var latLangInput=latLong.latitude+','+latLong.longitude;console.info('Latitude Longitude to Maritime API: '+latLangInput);return _this30.getDataFromService(apiParams.apiKey,'MaritimeWeather',latLangInput,'weatherworld.com');}).then(function(serviceData){var weatherData=JSON.parse(serviceData.Payload);console.info('Got maritime weather data');if(_.isEmpty(weatherData)){var msg='Maritime API did not return data';console.info(msg);reject(msg);}var errorObj=_.get(weatherData,'error');if(!_.isEmpty(errorObj)){var errMsg=_.get(errorObj,'data.error[0].msg');console.info('Maritime API returned error: ',errMsg);reject(errMsg);}var dateObj={};if(!_.isEmpty(dateTime)){var splitedDateTime=_.split(dateTime,'/');dateObj.fromDate=splitedDateTime[0];dateObj.toDate=splitedDateTime[1];var retVal=checkDate(dateObj,_);if(!retVal.flag){weatherDataResult.message='Sorry I can only get the forecast for up to 3 days ahead';dateObj.fromDate=retVal.date;}}var result=getHourData(dateObj,weatherData);weatherDataResult.result=result;resolve(weatherDataResult);});}});}},{key:'stateToBackEnd',value:function stateToBackEnd(){var botFlowArray=[];this._.each(this._botFlows,function(botFlow){botFlowArray.push(botFlow.getAllProperties());});var formsArray=[];this._.each(this._forms,function(form){formsArray.push(form.getAllProperties());});var stateToBackend={lang:this.lang,intentResolved:this.intentResolved,messageTypeFromUser:this.messageTypeFromUser,messageFromUser:this.messageFromUser,userName:this.userName,fields:this.fields};if(this._.size(botFlowArray)>0){stateToBackend._botFlows=botFlowArray;}if(this.promptAlive!==''){stateToBackend.promptAlive=this.promptAlive;}if(this._.size(formsArray)>0){stateToBackend._forms=formsArray;}if(this.developer._debugMode){stateToBackend._debugMode=true;}if(this.client===State.WEBCLIENT()){stateToBackend.client=this.client;}return{state:stateToBackend};}},{key:'getFinalResponse',value:function getFinalResponse(){var _=this._;var finalResponse={};if(this['_activeIntent']!==''){finalResponse._activeIntent=this['_activeIntent'];if(this.action){finalResponse.action=this.action;}if(this.nlpResponse){finalResponse.nlpResponse=this.nlpResponse;}if(this.nlpParameters){finalResponse.nlpParameters=this.nlpParameters;}}if(_.size(this['errorStack'])>0){finalResponse.errorStack=this['errorStack'];}finalResponse.fields=this['fields'];if(_.size(this['_log'])>0){finalResponse._log=this['_log'];finalResponse._log=this['_log'];}if(_.size(this['responsesArray'])>0){finalResponse.responsesArray=this['responsesArray'];}if(this['smartSuggestionsArray']&&_.size(this['smartSuggestionsArray'])>0){finalResponse.smartSuggestionsArray=this['smartSuggestionsArray'];}if(this['intentResolved']){finalResponse.intentResolved=this['intentResolved'];}var botFlowArray=[];this._.forEach(this._botFlows,function(botFlow){botFlowArray.push(botFlow.getAllProperties());});if(botFlowArray.length>0){finalResponse._botFlows=botFlowArray;}if(this.developer._debugMode){finalResponse._debugMode=true;}if(this.sendMessageParam){finalResponse.sendMessageParam=this.sendMessageParam;}if(this.blockSuggestions){finalResponse._blockSuggestions=true;}if(this.clearPrompt){finalResponse.clearPrompt=true;}return finalResponse;}},{key:'onError',set:function set(onErrorBlock){this._onError=onErrorBlock;},get:function get(){return this._onError;}},{key:'forms',get:function get(){return this._forms;}},{key:'activeIntent',get:function get(){return this._activeIntent;}},{key:'botFlows',get:function get(){return this._botFlows;}},{key:'searchBoxes',get:function get(){return this._searchBoxes;}},{key:'currentSearchBox',set:function set(searchBox){this._currentSearchBox=searchBox;},get:function get(){return this._currentSearchBox;}},{key:'blockSuggestions',set:function set(flag){this._blockSuggestions=flag;},get:function get(){return this._blockSuggestions;}},{key:'inError',get:function get(){return this._.size(this.errorStack)>0;}}]);return State;}();var LINKEDCUSTOMCAPA='onboarding-bot_CustomCap';var SYNC=false;var CANQUEUE=true;var NO_INTENT='0_NOINTENT';var BACKEND_RESULTS='backend_results';var NO_INTENT_MESSAGE="Sorry, I didn't get that";var deviceStorageUtil={conversation:'',getContext:function getContext(botContext,DeviceStorage){DeviceStorage=DeviceStorage||botContext.getCapability('DeviceStorage');return DeviceStorage.get(deviceStorageUtil.conversation);},setInContext:function setInContext(state,botContext){var DeviceStorage=botContext.getCapability('DeviceStorage');return DeviceStorage.save(state.conversationId,state);},resetContext:function resetContext(conversationId,botContext){var DeviceStorage=botContext.getCapability('DeviceStorage');return DeviceStorage.save(conversationId,{});},removeFromContext:function removeFromContext(key,botContext){var DeviceStorage=botContext.getCapability('DeviceStorage');return deviceStorageUtil.getContext(botContext,DeviceStorage).then(function(state){delete state[key];return DeviceStorage.save(deviceStorageUtil.conversation,state);});}};var runMatchers=function runMatchers(state){console.log('************* Matchers method ****************');var _=state._;var promiseProcessed=false;return new Promise(function(resolve,reject){if(state.messageTypeFromUser==='backend_results'||state.messageTypeFromUser==='form_response'||state.activeIntent===NO_INTENT){promiseProcessed=true;resolve();}else if(state.developer.isDeveloperIntent()){var devIntent=state.developer.identifyDeveloperIntent();if(devIntent){state.addActiveIntent(devIntent);}else{state.addSystemErrorToStack(12);state.addActiveIntent(NO_INTENT);}promiseProcessed=true;resolve();}else if(state.promptAlive===''){_.each(Bot(state),function(intent){if(intent.runLocation){if(intent.runLocation!==Intent.EDGE()&&intent.runLocation!==Intent.CLOUD()){state.addSystemErrorToStack(1);resolve();promiseProcessed=true;return false;}if(intent.runLocation===Intent.EDGE()){if(typeof intent.onMatching==='function'&&intent.intentId!=='main'){if(intent.onMatching(state)){state.developer.log('Intent matched to '+intent.intentId,LogEntrytype.INFO());state.addActiveIntent(intent.intentId);resolve();promiseProcessed=true;return false;}}}}else{state.addSystemErrorToStack(2);resolve();promiseProcessed=true;return false;}});}if(!promiseProcessed){if(state.messageTypeFromUser!==BACKEND_RESULTS){state.toCustomCap=true;}resolve();}});};var callCustomCap=function callCustomCap(state){console.log('************* Calling custom cap ****************');state.toCustomCap=false;var agentGuardService=state.context.getCapability('agentGuardService');var requestId=state.getNewRequestId();state.addRequestId(requestId);console.log('State to backend '+JSON.stringify(state.stateToBackEnd()));return agentGuardService.executeCustomCapability(LINKEDCUSTOMCAPA,state.stateToBackEnd(),SYNC,requestId,state.context,state.user,CANQUEUE).then(function(response){state.setWaitingCustomCap();return state.online().then(function(online){if(online){return'save';}else{state.addStringResponse("Your device appears to be offline, but don't worry, I process your message as soon as the connection is back and I will let you know.");}});}).catch(function(error){state.addSystemErrorToStack(4);if(error){state.addSystemErrorToStack(5,error.message);}});};var runValidators=function runValidators(state){console.log('************* Validators method ****************');var _=state._;var activeIntent=state.activeIntent;var validationResult=true;if(activeIntent!==NO_INTENT){_.each(Bot(state),function(intent){if(intent.intentId===activeIntent){if(intent.onError){state.onError=intent.onError;}try{if(intent.onValidation){state.developer.log('Starting onValidation for intent '+intent.intentId,LogEntrytype.INFO());intent.onValidation(state);if(state._.size(state.errorStack)>0){state.removeActiveIntent();validationResult=false;}}}catch(error){state.addSystemErrorToStack(5,error.message);state.removeActiveIntent();validationResult=false;}}});}return validationResult;};var runResolvers=function runResolvers(state){console.log('************* Resolvers method ****************');var _=state._;return new Promise(function(resolve,reject){var activeIntent=state.activeIntent;if(activeIntent.substring(0,5)==='_dev_'){state.developer.processCommand(activeIntent);resolve();}else if(activeIntent===''){resolve();}else if(activeIntent!==NO_INTENT){_.each(Bot(state),function(intent){if(intent.intentId===activeIntent){if(intent.onResolution){state.developer.log('Starting onResolution for intent '+intent.intentId,LogEntrytype.INFO());return intent.onResolution(state).then(function(){resolve();}).catch(function(error){state.addSystemErrorToStack(5,error.message);resolve();});}else{state.addSystemErrorToStack(3);resolve();}}});}});};var msgState={msgList:[]};var tell=function tell(msg,botContext){botContext.tell(msg);};var getGreetingIntent=function getGreetingIntent(state){var _=state._;var greetingIntent=null;_.each(Bot(state),function(intent){if(intent.intentId==='main'){greetingIntent=intent;return false;}});return greetingIntent;};var processGreeting=function processGreeting(state){console.log('Processing greeting');var greetingIntent=getGreetingIntent(state);if(greetingIntent){var onResolution=greetingIntent.onResolution;if(greetingIntent.onInit){greetingIntent.onInit(state);}return onResolution(state);}};var initialiseGreetingState=function initialiseGreetingState(conversation,user,stateParam,botContext){console.log('Initialising State');var emptyMessage=null;var state=new State(emptyMessage,conversation,user,'Edge',stateParam,botContext);state.resetWaitingForCustomCapCounter();return state;};var continueGreeting=function continueGreeting(botContext,previousMessages){var conversation=null;var user=null;var state={};var sendMessageParam=null;var authContext=botContext.getCapability('authContext');return authContext.getAuthUser(botContext).then(function(usr){user=usr;var conversationContext=botContext.getCapability('ConversationContext');return conversationContext.getConversationContext(botContext,user);}).then(function(context){conversation=context;console.log('Conversation: '+JSON.stringify(conversation));deviceStorageUtil.conversation=conversation.conversationId;return deviceStorageUtil.getContext(botContext);}).then(function(stateFromStorage){state=initialiseGreetingState(conversation,user,stateFromStorage,botContext);return processGreeting(state);}).then(function(){if(state.sendMessageParam){sendMessageParam=state.sendMessageParam;state.sendMessageParam=null;}state.fromGreeting=true;return view(state);}).then(function(){return state.save();}).then(function(){console.log('============> Before If');if(sendMessageParam){console.log('============> Found the send message '+JSON.stringify(sendMessageParam));var message={messageFromUser:sendMessageParam};if(typeof sendMessageParam==='string'){message.messageType='string';}else{message.messageType='object';}return next(message,{},previousMessages,botContext);}}).then(function(){return{status:200};}).catch(function(error){return tell('Something wrong has happened '+error.message,botContext);});};var greeting=function greeting(state,previousMessages,botContext){console.log('************* Greeting method ****************');if(state.reset){return continueGreeting(botContext,previousMessages);}else{var archiveUtils=botContext.getCapability('archiveUtils');return archiveUtils.overrideBotForArchive(this,msgState,botContext).then(function(){console.log('************* First then ****************');return archiveUtils.overrideTellForArchive(tell,msgState,botContext);}).then(function(newTell){tell=newTell;return continueGreeting(botContext,previousMessages);});}};var controller=function controller(state){var _=state._;console.log('************* Controller method ****************');return state.online().then(function(online){state.amIOnline=online;return runMatchers(state).then(function(){if(state.toCustomCap){return callCustomCap(state);}else{if(state.messageTypeFromUser==='form_response'){var formFromUser=state.messageFromUser;_.each(state.forms,function(form){if(form.formId===formFromUser.formId&&form.isOpen){form.onSubmit(state,formFromUser);form.closeForm();state.removeForm(form);return false;}});}else{console.log(state.activeIntent);if(!state.promptAlive||state.activeIntent.substring(0,5)==='_dev_'){if(runValidators(state)){return runResolvers(state);}}}}}).catch(function(error){state.addSystemErrorToStack(5,error.message);});});};var view=function view(state){console.log('************* View method ****************');var _=state._;return new Promise(function(resolve,reject){state.removeActiveIntent();state.developer.debug('Start processing responses');if(state.inError){console.log(JSON.stringify(state.errorStack));state.onError(state);}else{if(state.responsesArray.length===0&&!state.fromGreeting&&state.smartSuggestionsArray.length===0&&!state.sendMessageParam){state.addResponse('string',NO_INTENT_MESSAGE);}}if(state.fromGreeting){state.fromGreeting=false;}state.setDefaultSmartSuggestions(Bot(state));var smartSuggestions=state.smartSuggestionsArray;if(_.size(state.responsesArray)>0){_.each(state.responsesArray,function(response){var Message=state.context.getCapability('Message');var message=new Message();if(response.type===state.messageTypes.MESSAGE_TYPE_STRING){tell(response.message,state.context);}else if(response.type===state.messageTypes.MESSAGE_TYPE_WEB_CARD){var cards=response.message.cards;var previews=response.message.previews;message.webCard(cards,previews);tell(message,state.context);}else if(response.type===state.messageTypes.MESSAGE_TYPE_FORM2){console.log('************* Form capability ****************');try{var form=response.message;console.log('In view Form instance of Form? '+form instanceof Form);form.openForm();console.log(JSON.stringify(form.fields));console.log(JSON.stringify(form.options));message.form2Message(form.fields,form.options);tell(message,state.context);}catch(error){console.log(error.message);}}else if(response.type==='form_close'){if(message.closeFormMessage){message.closeFormMessage(response.message);tell(message,state.context);}}else if(response.type===state.messageTypes.MESSAGE_TYPE_SMART_SUGGESTIONS){smartSuggestions=response.message;}else if(response.type===state.messageTypes.MESSAGE_TYPE_TABLE){console.log('printing a table');if(state.conversation.client===State.WEBCLIENT()){var table=response.message;message.tableMessage(table.rows,table.options);tell(message,state.context);}else{var msg='Tables are not yet available in your client';state.addSystemErrorToStack(5,msg);tell(msg,state.context);}}else if(response.type==='data_card'){console.log('printing a card');if(state.conversation.client===State.MOBILECLIENT()){var list=response.message;console.log(JSON.stringify(list));message.dataCard(list);tell(message,state.context);}else{var _msg='Data cards are not yet available in your client';state.addSystemErrorToStack(5,_msg);tell(_msg,state.context);}}else if(response.type===state.messageTypes.MESSAGE_TYPE_CARDS){console.log('printing the new cards');if(state.conversation.client===State.MOBILECLIENT()){var _list=response.message;console.log(JSON.stringify(_list));message.cards(_list);tell(message,state.context);}else{var _msg2='Cards are not yet available in your client';state.addSystemErrorToStack(5,_msg2);tell(_msg2,state.context);}}else if(response.type===state.messageTypes.MESSAGE_TYPE_MAP){var map=response.message;var mapObject={region:map.region,markers:_.get(map,'markers'),polylines:_.get(map,'polylines'),planeRoutes:_.get(map,'planeRoutes'),cards:_.get(map,'cards')};console.log('Printing Map '+JSON.stringify(mapObject));message.mapMessage(mapObject,map.options);tell(message,state.context);}else if(response.type===state.messageTypes.MESSAGE_TYPE_STD_NOTIFICATION){message.standardNotification(content);tell(message,botContext);}else if(response.type===state.messageTypes.MESSAGE_TYPE_CRITICAL_NOTIFICATION){message.criticalNotification(content);tell(message,botContext);}else if(response.type==='stripe'){var payments=botContext.getCapability('Stripe');payments.startPayment(response.message.amount,response.message.currency,response.message.description,state.context);}else if(response.type===state.messageTypes.MESSAGE_TYPE_CHART){var chart=response.message;message.chartMessage(chart.data,chart.options);tell(message,state.context);}else if(response.type==='prompt'){var promptEntity=response.message;var fields=state.getForm(promptEntity.form).fields;var field=fields[promptEntity.promptIndex];state.promptAlive=promptEntity.name;if(field.type==='search_box'){var searchBox=new SearchBox(state,field.prompt,'single');message.searchBoxMessage(searchBox.getStartMessage());tell(message,state.context);}else{tell(field.prompt,state.context);}}else if(response.type==='search_box'){message.searchBoxMessage(response.message.getStartMessage());state.currentSearchBox=response.message;tell(message,state.context);}else if(response.type!=='silent'){var _msg3='Message type not supported';state.addSystemErrorToStack(5,_msg3);tell(_msg3,state.context);}});}else{console.log('Nothing in view');}state.clearResponseArray();state.clearError();if(!state.sendMessageParam){var MessageForSuggestions=state.context.getCapability('Message');var messageForSuggestions=new MessageForSuggestions();messageForSuggestions.smartSuggestions(smartSuggestions);tell(messageForSuggestions,state.context);}state.clearSmartSuggestionsArray();state.resetOnErrorMethod();state.developer.debug('Finished processing responses');resolve();});};var next=function next(msg,stateParam,previousMessages,botContext){console.log('************* Next method ****************');var authContext=botContext.getCapability('authContext');var conversation=null;var user=null;var state=null;var sendMessageParam=null;return authContext.getAuthUser(botContext).then(function(usr){user=usr;var conversationContext=botContext.getCapability('ConversationContext');return conversationContext.getConversationContext(botContext,user);}).then(function(context){conversation=context;deviceStorageUtil.conversation=conversation.conversationId;console.log(JSON.stringify(conversation));return deviceStorageUtil.getContext(botContext);}).then(function(stateFromStorage){console.log('State from storage '+JSON.stringify(stateFromStorage));state=new State(msg,conversation,user,'Edge',stateFromStorage,botContext);state.developer.debug('State initialised');var greetingIntent=getGreetingIntent(state);if(greetingIntent.onInit){greetingIntent.onInit(state);}if(msg.requestId){if(!state.markRequestIdProcessed(msg.requestId)){return Promise.resolve('ignore');}}console.log('Before syncing the state');state.syncWithBackendState(stateParam);if(state.intentResolved||state._.size(state.errorStack)>0){console.log('Intent resolved apparently');state.intentResolved=false;return Promise.resolve();}else{return controller(state);}}).then(function(noNeedForView){console.log('Entered view block');if(noNeedForView){console.log('Got a duplicated call');return noNeedForView;}return view(state);}).then(function(noNeedForView){console.log('Entered state save block');console.log('Last print '+JSON.stringify(state.getAllProperties()));if(state.sendMessageParam){sendMessageParam=state.sendMessageParam;state.sendMessageParam=null;}if(state.waitingCustomCap>0){console.log('Setting to wait');state.context.wait(true);}else{console.log('Setting not to wait');state.context.wait(false);}if(noNeedForView!=='ignore'){return state.save();}}).then(function(){console.log('Entered sendMessage block');if(sendMessageParam){var message={messageFromUser:sendMessageParam};var toGreeting=false;if(typeof sendMessageParam==='string'){message.messageType='string';}else{message.messageType='object';if(sendMessageParam.intentId&&sendMessageParam.intentId==='@@reset'){toGreeting=true;}}if(toGreeting){return greeting({reset:true},previousMessages,botContext);}else{return next(message,{},previousMessages,botContext);}}}).then(function(){return{status:200};}).catch(function(error){console.log('Catch block');if(state instanceof State){state.developer.debug('Error catched in next block');state.addSystemErrorToStack(5,error.message);return view(state).then(function(){state.save();});}else{console.log('Something very wrong '+error.message);}}).then(function(){console.log('Are we here?');return{status:200};});};var asyncResult=function asyncResult(result,stateParam,previousMessages,botContext){var utils=botContext.getCapability('Utils');var _=utils.Lodash;var state=_.get(result,'details[0].message');var requestId=_.get(result,'requestUuid');if(state&&requestId){var contentType=_.get(result,'contentType');var createdOn=_.get(result,'createdOn');var createdBy=_.get(result,'createdBy');var messageId=_.get(result,'messageId');var message={messageDate:createdOn,createdBy:createdBy,uuid:messageId,requestId:requestId,contentType:contentType,messageType:BACKEND_RESULTS};console.log('************* Data Received ****************');console.log(JSON.stringify(result));console.log('************* Data Received ****************');return next(message,state,previousMessages,botContext);}};var debug=function debug(state){return{localState:state};};var farewell=function farewell(msg,state,previousMessages,botContext){};return{done:farewell,init:greeting,next:next,debug:debug,asyncResult:asyncResult,version:'1.0.0'};})();